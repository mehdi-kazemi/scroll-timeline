[
  {
    "name": "Chrome",
    "logo": "https://unpkg.com/@browser-logos/chrome@2.0.0/chrome.svg",
    "versions": [
      {
        "name": "104.0",
        "data": {
          "type": 1,
          "result": [
            342,
            323
          ],
          "details": [
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim timeline\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:20:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim none\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:22:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim \\\"initial\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:24:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim auto\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:26:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim initial\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim 2000\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim timeline'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim timeline' is a supported value for animation. expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:37:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim none'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim none' is a supported value for animation. expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:39:1",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim auto'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim auto' is a supported value for animation. expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:41:1",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-delay",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-delay should be canonical expected \"1s, 1s, 1s\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-direction",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-direction should be canonical expected \"reverse, reverse, reverse\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-duration",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-duration should be canonical expected \"1s, 1s, 1s\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-fill-mode",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-fill-mode should be canonical expected \"forwards, forwards, forwards\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-iteration-count",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-iteration-count should be canonical expected \"2, 2, 2\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-name",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-name should be canonical expected \"anim1, anim2, anim3\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-play-state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-play-state should be canonical expected \"paused, paused, paused\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-timeline",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-timeline should be canonical expected (string) \"timeline, none, auto\" but got (undefined) undefined",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-timing-function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation-timing-function should be canonical expected \"linear, linear, linear\" but got \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should not set unrelated longhands",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:31:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:25:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                    "index": 21,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"1s linear 1s 2 reverse forwards paused anim\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"1s linear 1s 2 reverse forwards paused anim\"",
                      "\"1s linear 1s 2 reverse forwards paused anim\"",
                      "\"serialization should be canonical\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"1s linear 1s 2 reverse forwards paused anim\"",
                      "\"1s linear 1s 2 reverse forwards paused anim\"",
                      "\"serialization should round-trip\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim timeline\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:20:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim none\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:22:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim \\\"initial\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:24:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim auto\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:26:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim initial\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim 2000\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"animation doesn't seem to be supported in the computed style\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'1s linear 1s 2 reverse forwards paused anim' is a supported value for animation.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"1s linear 1s 2 reverse forwards paused anim\"",
                      "\"1s linear 1s 2 reverse forwards paused anim\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim timeline'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim timeline' is a supported value for animation. expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:37:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"animation doesn't seem to be supported in the computed style\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim timeline'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim timeline' is a supported value for animation. expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:37:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"'1s linear 1s 2 reverse forwards paused anim timeline' is a supported value for animation.\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim none' is a supported value for animation. expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:39:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"animation doesn't seem to be supported in the computed style\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim none' is a supported value for animation. expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:39:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"'1s linear 1s 2 reverse forwards paused anim none' is a supported value for animation.\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim auto'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim auto' is a supported value for animation. expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:41:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"animation doesn't seem to be supported in the computed style\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation value '1s linear 1s 2 reverse forwards paused anim auto'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: '1s linear 1s 2 reverse forwards paused anim auto' is a supported value for animation. expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:20:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:41:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"'1s linear 1s 2 reverse forwards paused anim auto' is a supported value for animation.\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-delay",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-delay should be canonical expected \"1s, 1s, 1s\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"1s, 1s, 1s\"",
                      "\"animation-delay should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-direction",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-direction should be canonical expected \"reverse, reverse, reverse\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"reverse, reverse, reverse\"",
                      "\"animation-direction should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-duration",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-duration should be canonical expected \"1s, 1s, 1s\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"1s, 1s, 1s\"",
                      "\"animation-duration should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-fill-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-fill-mode should be canonical expected \"forwards, forwards, forwards\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"forwards, forwards, forwards\"",
                      "\"animation-fill-mode should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-iteration-count",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-iteration-count should be canonical expected \"2, 2, 2\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"2, 2, 2\"",
                      "\"animation-iteration-count should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-name",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-name should be canonical expected \"anim1, anim2, anim3\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"anim1, anim2, anim3\"",
                      "\"animation-name should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-play-state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-play-state should be canonical expected \"paused, paused, paused\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"paused, paused, paused\"",
                      "\"animation-play-state should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-timeline",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-timeline should be canonical expected (string) \"timeline, none, auto\" but got (undefined) undefined",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "undefined",
                      "\"timeline, none, auto\"",
                      "\"animation-timeline should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should set animation-timing-function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation-timing-function should be canonical expected \"linear, linear, linear\" but got \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"linear, linear, linear\"",
                      "\"animation-timing-function should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "e.style['animation'] = \"1s linear 1s 2 reverse forwards paused anim1 timeline,\\n   1s linear 1s 2 reverse forwards paused anim2 none,\\n   1s linear 1s 2 reverse forwards paused anim3 auto\" should not set unrelated longhands",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:31:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:25:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-shorthand.html:45:1",
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Property animation-timeline value 'initial'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:22:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'inherit'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:23:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'unset'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:24:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'revert'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:25:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'auto'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:26:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'none'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:27:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'auto, auto'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:28:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'none, none'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:29:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'auto, none'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:30:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'none, auto'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:31:1",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value '\"test\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:32:1",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value '\"none\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:33:1",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value '\"auto\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:34:1",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value '\"initial\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:35:1",
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value '\"inherit\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:36:1",
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value '\"unset\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:37:1",
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value '\"revert\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:38:1",
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'test'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:39:1",
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'test1, test2'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:40:1",
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'test1, \"test2\", none, test3, auto'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:41:1",
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "The animation-timeline property shows up in CSSStyleDeclaration enumeration",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: got disallowed value -1",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:45:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:43:1",
                    "index": 21,
                    "phase": 4
                  },
                  {
                    "name": "The animation-timeline property shows up in CSSStyleDeclaration.cssText",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: got disallowed value -1",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:50:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:48:1",
                    "index": 22,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll()'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:59:1",
                    "index": 23,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(block)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:60:1",
                    "index": 24,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(inline)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:61:1",
                    "index": 25,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(horizontal)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:62:1",
                    "index": 26,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(vertical)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:63:1",
                    "index": 27,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(root)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:64:1",
                    "index": 28,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(nearest)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:65:1",
                    "index": 29,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(inline nearest)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:66:1",
                    "index": 30,
                    "phase": 4
                  },
                  {
                    "name": "Property animation-timeline value 'scroll(vertical root)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:67:1",
                    "index": 31,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'initial'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:22:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'inherit'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:23:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'unset'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:24:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'revert'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:25:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'auto'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:26:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:27:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'auto, auto'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:28:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'none, none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:29:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'auto, none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:30:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'none, auto'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:31:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value '\"test\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:32:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value '\"none\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:33:1",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value '\"auto\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:34:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value '\"initial\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:35:1",
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value '\"inherit\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:36:1",
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value '\"unset\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:37:1",
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value '\"revert\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:38:1",
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'test'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:39:1",
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'test1, test2'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:40:1",
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'test1, \"test2\", none, test3, auto'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:41:1",
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The animation-timeline property shows up in CSSStyleDeclaration enumeration",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: got disallowed value -1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:45:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:43:1",
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "-1",
                      "-1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The animation-timeline property shows up in CSSStyleDeclaration.cssText",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: got disallowed value -1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:50:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:48:1",
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "-1",
                      "-1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll()'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:59:1",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(block)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:60:1",
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(inline)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:61:1",
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(horizontal)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:62:1",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(vertical)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:63:1",
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(root)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:64:1",
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(nearest)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:65:1",
                      "index": 29,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(inline nearest)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:66:1",
                      "index": 30,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property animation-timeline value 'scroll(vertical root)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: animation-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-computed.html:67:1",
                      "index": 31,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-timeline-in-keyframe.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "The animation-timeline property may not be used in keyframes",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected (string) \"auto\" but got (undefined) undefined",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-in-keyframe.html:32:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-in-keyframe.html:28:1",
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The animation-timeline property may not be used in keyframes",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected (string) \"auto\" but got (undefined) undefined",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-in-keyframe.html:32:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-in-keyframe.html:28:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The animation-timeline property may not be used in keyframes",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected (string) \"auto\" but got (undefined) undefined",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-in-keyframe.html:32:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-in-keyframe.html:28:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "undefined",
                      "\"auto\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-timeline-multiple.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "animation-timeline works with multiple timelines",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline works with multiple timelines",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline works with multiple timelines",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"140px\"",
                      "\"140px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline works with multiple timelines",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"160px\"",
                      "\"160px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline works with multiple timelines",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"180px\"",
                      "\"180px\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "scroll-timeline-name is referenceable in animation-timeline on the declaring element itself",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:89:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:72:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-name is referenceable in animation-timeline on that element's descendants",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:110:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:96:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-name is referenceable in animation-timeline on that element's following siblings",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:126:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:114:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-name is referenceable in animation-timeline on that element's following siblings' descendants",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:146:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:130:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-name is not referenceable in animation-timeline on that element's previous siblings",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: Animation with unknown timeline name holds current time at zero expected \"50px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:166:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:154:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-name is matched based on tree order, which considers siblings closer than parents",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:195:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:171:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-name on an element which is not a scroll-container",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-axis is block",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:243:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:232:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-axis is inline",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:257:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:246:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-axis is horizontal",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:271:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:260:1",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "scroll-timeline-axis is vertical",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:285:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:274:1",
                    "index": 11,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-name is referenceable in animation-timeline on the declaring element itself",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:89:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:72:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-name is referenceable in animation-timeline on that element's descendants",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:110:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:96:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-name is referenceable in animation-timeline on that element's following siblings",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:126:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:114:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-name is referenceable in animation-timeline on that element's following siblings' descendants",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:146:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:130:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-name is not referenceable in animation-timeline on that element's previous siblings",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Animation with unknown timeline name holds current time at zero expected \"50px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:166:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:154:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"50px\"",
                      "\"Animation with unknown timeline name holds current time at zero\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-name is matched based on tree order, which considers siblings closer than parents",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:195:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:171:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-name on an element which is not a scroll-container",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"none\"",
                      "\"Animation with an unresolved current time\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-axis is block",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:243:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:232:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-axis is inline",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:257:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:246:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-axis is horizontal",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:271:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:260:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "scroll-timeline-axis is vertical",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:285:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-named-scroll-progress-timeline.tentative.html:274:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-timeline-none.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Animation with animation-timeline:none holds current time at zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"107.078px\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-none.html:40:5)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Animation with unknown timeline name holds current time at zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"107.078px\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-none.html:44:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                    "index": 2,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation with animation-timeline:none holds current time at zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"107.078px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-none.html:40:5)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation with animation-timeline:none holds current time at zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"107.078px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-none.html:40:5)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"107.078px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation with unknown timeline name holds current time at zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"107.078px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-none.html:44:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"107.078px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "e.style['animation-timeline'] = \"initial\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:16:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"inherit\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:17:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"unset\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:18:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"revert\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:19:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"auto\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:20:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"none\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:21:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"auto, auto\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:22:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"none, none\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:23:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"auto, none\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:24:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"none, auto\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:25:1",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"test\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:26:1",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"none\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:27:1",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"auto\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:28:1",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"initial\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:29:1",
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"inherit\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:30:1",
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"unset\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:31:1",
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"revert\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:32:1",
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"test\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:33:1",
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"test1, test2\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:34:1",
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"test1, \\\"test2\\\", none, test3, auto\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:35:1",
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"10px\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 21,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"auto auto\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 22,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"none none\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 23,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"foo bar\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 24,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"\\\"foo\\\" \\\"bar\\\"\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 25,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"rgb(1, 2, 3)\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 26,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"#fefefe\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 27,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll()\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:51:1",
                    "index": 28,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(block)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:52:1",
                    "index": 29,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(inline)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:53:1",
                    "index": 30,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(horizontal)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:54:1",
                    "index": 31,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(vertical)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:55:1",
                    "index": 32,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(root)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:56:1",
                    "index": 33,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(nearest)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:57:1",
                    "index": 34,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(inline nearest)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:58:1",
                    "index": 35,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(vertical root)\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:59:1",
                    "index": 36,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(root block)\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 37,
                    "phase": 4
                  },
                  {
                    "name": "e.style['animation-timeline'] = \"scroll(abc root)\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 38,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"initial\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:16:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"inherit\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:17:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"unset\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:18:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"revert\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:19:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"auto\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:20:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"none\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:21:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"auto, auto\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:22:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"none, none\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:23:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"auto, none\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:24:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"none, auto\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:25:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"test\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:26:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"none\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:27:1",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"auto\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:28:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"initial\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:29:1",
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"inherit\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:30:1",
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"unset\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:31:1",
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"revert\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:32:1",
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"test\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:33:1",
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"test1, test2\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:34:1",
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"test1, \\\"test2\\\", none, test3, auto\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:35:1",
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"10px\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"auto auto\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"none none\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"foo bar\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"\\\"foo\\\" \\\"bar\\\"\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"rgb(1, 2, 3)\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"#fefefe\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll()\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:51:1",
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(block)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:52:1",
                      "index": 29,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(inline)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:53:1",
                      "index": 30,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(horizontal)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:54:1",
                      "index": 31,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(vertical)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:55:1",
                      "index": 32,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(root)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:56:1",
                      "index": 33,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(nearest)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:57:1",
                      "index": 34,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(inline nearest)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:58:1",
                      "index": 35,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(vertical root)\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-parsing.html:59:1",
                      "index": 36,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(root block)\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['animation-timeline'] = \"scroll(abc root)\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 38,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "animation-timeline: scroll(nearest)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"50px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:85:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:80:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline: scroll(root)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"50px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:98:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:93:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline: scroll(inline)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:111:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:106:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline: scroll(horizontal)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:120:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:114:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline: scroll(vertical)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:129:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:123:1",
                    "index": 5,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline: scroll(nearest)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"50px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:85:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:80:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"50px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline: scroll(root)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"50px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:98:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:93:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"50px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline: scroll(inline)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:111:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:106:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline: scroll(horizontal)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:120:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:114:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline: scroll(vertical)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:129:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/animation-timeline-scroll-functional-notation.tentative.html:123:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-cascade.html",
              {
                "type": "complete",
                "tests": [],
                "status": {
                  "status": 1,
                  "message": "Uncaught TypeError: this.parseError is not a function",
                  "stack": "TypeError: this.parseError is not a function\n    at t.assertString (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-cascade.html:3:29063)\n    at t.parseScrollTimeline (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-cascade.html:3:26442)\n    at t.transpileStyleSheet (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-cascade.html:3:25614)\n    at e (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-cascade.html:3:31427)\n    at CSS.supports.MutationObserver.observe.childList (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-cascade.html:3:31668)",
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": []
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Switching between document and scroll timelines [immediate]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"120px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:126:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Switching between document and scroll timelines [scroll]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:121:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Changing computed value of animation-timeline changes effective timeline [immediate]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"120px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:150:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Changing computed value of animation-timeline changes effective timeline [scroll]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:147:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Changing to/from animation-timeline:none [immediate]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:180:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Changing to/from animation-timeline:none [scroll]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:176:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Changing the source descriptor switches effective timeline [immediate]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"120px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:207:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Changing the source descriptor switches effective timeline [scroll]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:204:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Reverse animation direction [immediate]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"180px\" but got \"200px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:223:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Reverse animation direction [scroll]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"200px\" but got \"180px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:219:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Switching timelines while paused [immediate]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"120px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:242:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Switching timelines while paused [scroll]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:238:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Switching timelines and pausing at the same time [immediate]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"120px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:279:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Switching timelines and pausing at the same time [scroll]",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:267:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                    "index": 14,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching between document and scroll timelines [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:126:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching between document and scroll timelines [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:126:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"120px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching between document and scroll timelines [scroll]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:121:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing computed value of animation-timeline changes effective timeline [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:150:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing computed value of animation-timeline changes effective timeline [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:150:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"120px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing computed value of animation-timeline changes effective timeline [scroll]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:147:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing to/from animation-timeline:none [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:180:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing to/from animation-timeline:none [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:180:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing to/from animation-timeline:none [scroll]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:176:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing the source descriptor switches effective timeline [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:207:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing the source descriptor switches effective timeline [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:207:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"120px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing the source descriptor switches effective timeline [scroll]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:204:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reverse animation direction [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"180px\" but got \"200px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:223:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"200px\"",
                      "\"200px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reverse animation direction [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"180px\" but got \"200px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:223:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"200px\"",
                      "\"180px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reverse animation direction [scroll]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"200px\" but got \"180px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:219:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"180px\"",
                      "\"200px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching timelines while paused [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:242:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching timelines while paused [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:242:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"120px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching timelines while paused [scroll]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:238:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching timelines and pausing at the same time [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:279:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching timelines and pausing at the same time [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:279:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"100px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching timelines and pausing at the same time [immediate]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"120px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:102:7\n    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:279:11\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"120px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching timelines and pausing at the same time [scroll]",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:113:7\n    at async http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:267:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-dynamic.tentative.html:91:11)",
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"100px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Changing animation-timeline changes the timeline (sanity check)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"140px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:93:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline ignored after setting timeline with JS (ScrollTimeline from JS)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "promise_test: Unhandled rejection with value: object \"TypeError: Failed to set the 'timeline' property on 'Animation': Failed to convert value to 'AnimationTimeline'.\"",
                    "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline ignored after setting timeline with JS (ScrollTimeline from CSS)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"140px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:121:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline ignored after setting timeline with JS (document timeline)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "animation-timeline ignored after setting timeline with JS (null)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"120px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:148:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                    "index": 5,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing animation-timeline changes the timeline (sanity check)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"140px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:93:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Changing animation-timeline changes the timeline (sanity check)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"140px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:93:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"140px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (ScrollTimeline from JS)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "promise_test: Unhandled rejection with value: object \"TypeError: Failed to set the 'timeline' property on 'Animation': Failed to convert value to 'AnimationTimeline'.\"",
                      "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (ScrollTimeline from CSS)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"140px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:121:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (ScrollTimeline from CSS)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"140px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:121:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"140px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (document timeline)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (document timeline)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (document timeline)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (null)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:148:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-timeline ignored after setting timeline with JS (null)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"120px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:148:5\n    at async Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-ignored.tentative.html:81:9)",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-inactive-phase.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Animation does not apply when timeline is initially inactive",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-inactive-phase.html:52:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation does not apply when timeline is initially inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-inactive-phase.html:52:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Multiple style/layout passes occur when necessary",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 100 but got 1",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html:103:7)",
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Multiple style/layout passes occur when necessary",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 100 but got 1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html:103:7)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"1px\"",
                      "\"1px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Multiple style/layout passes occur when necessary",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 100 but got 1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html:103:7)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"1px\"",
                      "\"1px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Multiple style/layout passes occur when necessary",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 100 but got 1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html:103:7)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Multiple style/layout passes occur when necessary",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 100 but got 1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html:103:7)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Multiple style/layout passes occur when necessary",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 100 but got 1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html:103:7)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Multiple style/layout passes occur when necessary",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 100 but got 1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-multi-pass.tentative.html:103:7)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "100"
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-orientation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Orientation auto behaves as expected",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Orientation vertical behaves as expected",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Orientation horizontal behaves as expected",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Orientation block behaves as expected in horizontal writing-mode",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Orientation inline behaves as expected in horizontal writing-mode",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Orientation block behaves as expected in vertical writing-mode",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Orientation inline behaves as expected in vertical writing-mode",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation auto behaves as expected",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"175px\"",
                      "\"175px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation vertical behaves as expected",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"175px\"",
                      "\"175px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation horizontal behaves as expected",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"125px\"",
                      "\"125px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation block behaves as expected in horizontal writing-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"175px\"",
                      "\"175px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation inline behaves as expected in horizontal writing-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"125px\"",
                      "\"125px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation block behaves as expected in vertical writing-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"vertical-lr\"",
                      "\"vertical-lr\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation block behaves as expected in vertical writing-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"125px\"",
                      "\"125px\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation inline behaves as expected in vertical writing-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"vertical-lr\"",
                      "\"vertical-lr\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Orientation inline behaves as expected in vertical writing-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"175px\"",
                      "\"175px\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-paused-animations.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Test that the scroll animation is paused",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "promise_test: Unhandled rejection with value: object \"TypeError: Cannot read properties of undefined (reading 'ready')\"",
                    "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Test that the scroll animation is paused by updating animation-play-state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "promise_test: Unhandled rejection with value: object \"TypeError: Cannot read properties of undefined (reading 'ready')\"",
                    "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                    "index": 2,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": []
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-responsiveness-from-endpoint.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Test that the scroll animation is still responsive after moving from 100%",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "promise_test: Unhandled rejection with value: object \"TypeError: Cannot read properties of undefined (reading 'ready')\"",
                    "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": []
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-sampling.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Scroll position is sampled once per frame",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-sampling.html:47:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Scroll position is sampled once per frame",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-sampling.html:47:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Nonexistent source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:93:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Setting id attribute",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:97:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Removing id attribute",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:107:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Setting id attribute earlier in the tree",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:115:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Appending a new element",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:125:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Inserting a subtree with #scroller descendant",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:147:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Removing source element",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:158:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Removing ancestor of source element",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:176:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 8,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Nonexistent source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:93:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting id attribute",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:97:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Removing id attribute",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:107:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting id attribute earlier in the tree",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:115:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Appending a new element",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:125:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Inserting a subtree with #scroller descendant",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:147:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Removing source element",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:158:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Removing ancestor of source element",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:176:5\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source-invalidation.tentative.html:88:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Source none causes inactive timeline",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"104.109px\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source.html:104:7)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Source auto selects scrollingElement of the document",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Unspecified source behaves like auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Source selector(<id-selector>) selects an element",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Unknown source causes inactive timeline",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"104.109px\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source.html:127:7)",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Source with no layout box causes inactive timeline",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"100px\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source.html:132:7)",
                    "index": 6,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Source none causes inactive timeline",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"104.109px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source.html:104:7)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"104.109px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Source auto selects scrollingElement of the document",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "104.109",
                      "104.11184210526316",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Unspecified source behaves like auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "104.109",
                      "104.11184210526316",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Source selector(<id-selector>) selects an element",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "137.5",
                      "137.5",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Unknown source causes inactive timeline",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"104.109px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source.html:127:7)",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"104.109px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Source with no layout box causes inactive timeline",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"100px\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-source.html:132:7)",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"100px\"",
                      "\"0px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/at-scroll-timeline-unknown-descriptor.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Unknown descriptors do not invalidate the @scroll-timeline rule",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Unknown descriptors do not invalidate the @scroll-timeline rule",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"150px\"",
                      "\"150px\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "animation-duration",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"25px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:75:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:70:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "animation-duration: 0s",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:83:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:78:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "animation-duration: infinite",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:91:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:86:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "animation-iteration-count",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"25px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:104:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:99:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "animation-iteration-count: 0",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:121:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:115:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "animation-iteration-count: infinite",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"100px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:130:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:124:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "animation-direction: normal",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"25px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:143:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:138:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "animation-direction: reverse",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"75px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:152:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:146:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "animation-direction: alternate",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"20px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:162:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:155:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "animation-direction: alternate-reverse",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"80px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:175:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:168:1",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "animation-delay with a positive value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"25px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:191:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:186:1",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "animation-delay with a negative value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"60px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:221:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:210:1",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "animation-fill-mode",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"0px\" but got \"none\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:238:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:229:1",
                    "index": 13,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-duration",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"25px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:75:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:70:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"25px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-duration: 0s",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:83:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:78:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-duration: infinite",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:91:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:86:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-iteration-count",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"25px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:104:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:99:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"25px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-iteration-count: 0",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:121:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:115:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"0px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-iteration-count: infinite",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"100px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:130:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:124:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"100px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-direction: normal",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"25px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:143:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:138:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"25px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-direction: reverse",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"75px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:152:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:146:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"75px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-direction: alternate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"20px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:162:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:155:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"20px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-direction: alternate-reverse",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"80px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:175:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:168:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"80px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-delay with a positive value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"25px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:191:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:186:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"25px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-delay with a negative value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"60px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:221:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:210:1",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"60px\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-fill-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:238:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:229:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"none\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "animation-fill-mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"0px\" but got \"none\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:238:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/progress-based-animation-animation-longhand-properties.tentative.html:229:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"0px\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/progress-based-animation-timeline.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "progress based animation timeline works",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "progress based animation timeline works",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"120px\"",
                      "\"120px\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Property scroll-timeline-axis value 'initial'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:23:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-axis value 'inherit'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:24:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-axis value 'unset'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:25:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-axis value 'revert'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:26:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-axis value 'block'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:27:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-axis value 'inline'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:28:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-axis value 'vertical'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:29:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-axis value 'horizontal'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:30:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "The scroll-timeline-axis property shows up in CSSStyleDeclaration enumeration",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: got disallowed value -1",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:34:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:32:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "The scroll-timeline-axis property shows up in CSSStyleDeclaration.cssText",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: got disallowed value -1",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:39:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:37:1",
                    "index": 10,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'initial'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:23:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'inherit'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:24:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'unset'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:25:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'revert'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:26:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'block'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:27:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'inline'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:28:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'vertical'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:29:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-axis value 'horizontal'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-axis doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:30:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-axis doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The scroll-timeline-axis property shows up in CSSStyleDeclaration enumeration",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: got disallowed value -1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:34:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:32:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "-1",
                      "-1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The scroll-timeline-axis property shows up in CSSStyleDeclaration.cssText",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: got disallowed value -1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:39:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-computed.tentative.html:37:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "-1",
                      "-1"
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"initial\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:19:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"inherit\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:20:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"unset\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:21:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"revert\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:22:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"block\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:24:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"inline\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:25:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"vertical\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:26:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"horizontal\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:27:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"abc\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"10px\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"auto\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-axis'] = \"none\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"initial\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:19:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"inherit\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:20:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"unset\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:21:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"revert\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:22:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"block\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:24:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"inline\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:25:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"vertical\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:26:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"horizontal\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-axis-parsing.tentative.html:27:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"abc\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"10px\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"auto\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-axis'] = \"none\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Empty block",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:38:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "EOF ends block",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:38:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name can be a <string>",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:38:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Missing prelude",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Missing block",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Missing timeline name",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name must be an identifier",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name must match <custom-ident>",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name must match <custom-ident> (caps)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name must match <custom-ident> (mixed)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name may not be initial",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name may not be inherit",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name may not be unset",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name may not be revert",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Timeline name may not be default",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Extra timeline name",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "CSSRule.type returns 0",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:88:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:87:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.name foo",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.name Foo",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.name f___123",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.name a\\9 b",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 21,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.name \"foo\"",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 22,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.name \"none\"",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 23,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: empty rule",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 24,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: escaped name",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 25,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: source descriptor",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 26,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: orientation descriptor",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 27,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (none)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 28,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (auto)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 29,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (container-based offset, px)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 30,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (container-based offset, percentage)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 31,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 32,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with edge)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 33,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with threshold)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 34,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with edge and threshold)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 35,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with threshold and edge)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 36,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (multiple offsets)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 37,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: defaults",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 38,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.cssText: order",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 39,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(#foo)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 40,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector( #foo )",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 41,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source  selector(#foo) ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 42,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 43,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source  none ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 44,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(#a\\9 b)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 45,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 46,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source #foo",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 47,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 48,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source element(#foo)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 49,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(#foo more)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 50,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(html)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 51,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(foo)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 52,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(:before)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 53,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(*)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 54,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(.a)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 55,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.source selector(.a, .b)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 56,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 57,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation block",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 58,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation inline",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 59,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation horizontal",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 60,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation vertical",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 61,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation   vertical  ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 62,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 63,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation foo",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 64,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation 10px",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 65,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.orientation red",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 66,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 67,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets  none ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 68,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 69,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets red",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 70,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets #fff",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 71,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets unset",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 72,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets unknown(#foo)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 73,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 74,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 75,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets 3",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 76,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3 start 10",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 77,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets 0%, 100%, selector(.a)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 78,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3 end, start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 79,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 80,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets 10em",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 81,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets 10%",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 82,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets calc(1px + 1%)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 83,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 84,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets  selector(#foo)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 85,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 86,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) start 3",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 87,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 88,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3.5",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 89,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 90,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) end 3",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 91,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3 end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 92,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets  auto , auto ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 93,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets 10%, 100px",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 94,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets auto, 100%",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 95,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets 0%, selector(  #foo)  3  end  ",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 96,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) end 3, selector(#bar)",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 97,
                    "phase": 4
                  },
                  {
                    "name": "CSSScrollTimelineRule.scrollOffsets 0%, auto, selector(#foo) start, auto, selector(#bar) 12.3",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 1 but got 0",
                    "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                    "index": 98,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 1,
                  "message": "Uncaught TypeError: this.parseError is not a function",
                  "stack": "TypeError: this.parseError is not a function\n    at t.parseIdentifier (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:3:28490)\n    at t.parseScrollTimeline (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:3:26396)\n    at t.transpileStyleSheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:3:25614)\n    at e (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:3:31427)\n    at CSS.supports.MutationObserver.observe.childList (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:3:31668)",
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Empty block",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:38:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "EOF ends block",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:38:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name can be a <string>",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:38:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Missing prelude",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Missing block",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Missing timeline name",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name must be an identifier",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name must match <custom-ident>",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name must match <custom-ident> (caps)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name must match <custom-ident> (mixed)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name may not be initial",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name may not be inherit",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name may not be unset",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name may not be revert",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Timeline name may not be default",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Extra timeline name",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSRule.type returns 0",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:88:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:87:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.name foo",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.name Foo",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.name f___123",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.name a\\9 b",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.name \"foo\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.name \"none\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:101:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: empty rule",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: escaped name",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: source descriptor",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: orientation descriptor",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (none)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (auto)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 29,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (container-based offset, px)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 30,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (container-based offset, percentage)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 31,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 32,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with edge)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 33,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with threshold)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 34,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with edge and threshold)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 35,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (element offset with threshold and edge)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 36,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: scroll-offsets descriptor (multiple offsets)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: defaults",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 38,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.cssText: order",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:120:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 39,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(#foo)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 40,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector( #foo )",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 41,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source  selector(#foo) ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 42,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 43,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source  none ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 44,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(#a\\9 b)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 45,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 46,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source #foo",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 47,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 48,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source element(#foo)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 49,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(#foo more)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 50,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(html)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 51,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(foo)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 52,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(:before)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 53,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(*)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 54,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(.a)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 55,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.source selector(.a, .b)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 56,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 57,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation block",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 58,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation inline",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 59,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation horizontal",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 60,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation vertical",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 61,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation   vertical  ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 62,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 63,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation foo",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 64,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation 10px",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 65,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.orientation red",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 66,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 67,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets  none ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 68,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 69,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets red",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 70,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets #fff",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 71,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets unset",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 72,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets unknown(#foo)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 73,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 74,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 75,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets 3",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 76,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3 start 10",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 77,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets 0%, 100%, selector(.a)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 78,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3 end, start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 79,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 80,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets 10em",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 81,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets 10%",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 82,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets calc(1px + 1%)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 83,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 84,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets  selector(#foo)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 85,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 86,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) start 3",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 87,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 88,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3.5",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 89,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 90,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) end 3",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 91,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) 3 end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 92,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets  auto , auto ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 93,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets 10%, 100px",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 94,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets auto, 100%",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 95,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets 0%, selector(  #foo)  3  end  ",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 96,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets selector(#foo) end 3, selector(#bar)",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 97,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "CSSScrollTimelineRule.scrollOffsets 0%, auto, selector(#foo) start, auto, selector(#bar) 12.3",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 1 but got 0",
                      "stack": "    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:56:5\n    at with_stylesheet (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:22:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-cssom.tentative.html:32:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)",
                      "index": 98,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1"
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Property scroll-timeline-name value 'initial'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:23:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value 'inherit'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:24:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value 'unset'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:25:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value 'revert'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:26:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value 'none'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:27:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value '\"test\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:28:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value '\"none\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:29:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value '\"auto\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:30:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value '\"initial\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:31:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value '\"inherit\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:32:1",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value '\"unset\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:33:1",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value '\"revert\"'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:34:1",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline-name value 'test'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:35:1",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "The scroll-timeline-name property shows up in CSSStyleDeclaration enumeration",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: got disallowed value -1",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:39:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:37:1",
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "The scroll-timeline-name property shows up in CSSStyleDeclaration.cssText",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: got disallowed value -1",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:44:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:42:1",
                    "index": 15,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value 'initial'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:23:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value 'inherit'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:24:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value 'unset'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:25:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value 'revert'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:26:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value 'none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:27:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value '\"test\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:28:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value '\"none\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:29:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value '\"auto\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:30:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value '\"initial\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:31:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value '\"inherit\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:32:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value '\"unset\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:33:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value '\"revert\"'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:34:1",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline-name value 'test'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline-name doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:35:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline-name doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The scroll-timeline-name property shows up in CSSStyleDeclaration enumeration",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: got disallowed value -1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:39:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:37:1",
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "-1",
                      "-1"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The scroll-timeline-name property shows up in CSSStyleDeclaration.cssText",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: got disallowed value -1",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:44:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-computed.tentative.html:42:1",
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "-1",
                      "-1"
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "e.style['scroll-timeline-name'] = \"initial\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:19:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"inherit\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:20:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"unset\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:21:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"revert\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:22:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"none\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:24:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"abc\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:25:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"  abc\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:26:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"test\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:28:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"none\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:29:1",
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"auto\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:30:1",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"initial\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:31:1",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"inherit\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:32:1",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"unset\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:33:1",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"revert\\\"\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:34:1",
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"auto\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"10px\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"foo bar\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"\\\"foo\\\" \\\"bar\\\"\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"rgb(1, 2, 3)\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline-name'] = \"#fefefe\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 20,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"initial\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:19:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"inherit\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:20:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"unset\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:21:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"revert\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:22:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"none\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:24:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"abc\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:25:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"  abc\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:26:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"test\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:28:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"none\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:29:1",
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"auto\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:30:1",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"initial\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:31:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"inherit\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:32:1",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"unset\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:33:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"revert\\\"\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-name-parsing.tentative.html:34:1",
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"auto\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"10px\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"foo bar\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"\\\"foo\\\" \\\"bar\\\"\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"rgb(1, 2, 3)\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline-name'] = \"#fefefe\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "e.style['scroll-timeline'] = \"block none\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:18:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"none inline\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:19:1",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"horizontal abc\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:20:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"inline abc\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:21:1",
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"vertical none\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:22:1",
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"inline inline\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:23:1",
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"abc\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:24:1",
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"inline\" should set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_not_equals: property should be set got disallowed value \"\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:25:1",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"abc abc\" should not set the property value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline value 'abc inline'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:30:1",
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline value 'none vertical'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:31:1",
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline value 'horizontal abc'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:32:1",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Property scroll-timeline value 'vertical vertical'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:33:1",
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"vertical abc\" should set scroll-timeline-axis",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: scroll-timeline-axis should be canonical expected (string) \"vertical\" but got (undefined) undefined",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:35:1",
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"vertical abc\" should set scroll-timeline-name",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: scroll-timeline-name should be canonical expected (string) \"abc\" but got (undefined) undefined",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:35:1",
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"vertical abc\" should not set unrelated longhands",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:31:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:25:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:35:1",
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"horizontal inline\" should set scroll-timeline-axis",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: scroll-timeline-axis should be canonical expected (string) \"horizontal\" but got (undefined) undefined",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:40:1",
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"horizontal inline\" should set scroll-timeline-name",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: scroll-timeline-name should be canonical expected (string) \"inline\" but got (undefined) undefined",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:40:1",
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "e.style['scroll-timeline'] = \"horizontal inline\" should not set unrelated longhands",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_true: expected true got false",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:31:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:25:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:40:1",
                    "index": 20,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"block none\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:18:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"none inline\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:19:1",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"horizontal abc\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:20:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"inline abc\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:21:1",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"vertical none\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:22:1",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"inline inline\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:23:1",
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"abc\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:24:1",
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"inline\" should set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_not_equals: property should be set got disallowed value \"\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/parsing-testcommon.js:17:9)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_valid_value (http://web-platform.test:8000/css/support/parsing-testcommon.js:12:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:25:1",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\"",
                      "\"property should be set\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"abc abc\" should not set the property value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"\"",
                      "\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline value 'abc inline'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:30:1",
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline value 'none vertical'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:31:1",
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline value 'horizontal abc'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:32:1",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Property scroll-timeline value 'vertical vertical'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: scroll-timeline doesn't seem to be supported in the computed style expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/computed-testcommon.js:19:5)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_computed_value (http://web-platform.test:8000/css/support/computed-testcommon.js:17:3)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:33:1",
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"scroll-timeline doesn't seem to be supported in the computed style\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"vertical abc\" should set scroll-timeline-axis",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: scroll-timeline-axis should be canonical expected (string) \"vertical\" but got (undefined) undefined",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:35:1",
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "undefined",
                      "\"vertical\"",
                      "\"scroll-timeline-axis should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"vertical abc\" should set scroll-timeline-name",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: scroll-timeline-name should be canonical expected (string) \"abc\" but got (undefined) undefined",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:35:1",
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "undefined",
                      "\"abc\"",
                      "\"scroll-timeline-name should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"vertical abc\" should not set unrelated longhands",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:31:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:25:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:35:1",
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"horizontal inline\" should set scroll-timeline-axis",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: scroll-timeline-axis should be canonical expected (string) \"horizontal\" but got (undefined) undefined",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:40:1",
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "undefined",
                      "\"horizontal\"",
                      "\"scroll-timeline-axis should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"horizontal inline\" should set scroll-timeline-name",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: scroll-timeline-name should be canonical expected (string) \"inline\" but got (undefined) undefined",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:14:17)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:7:9)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:40:1",
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "undefined",
                      "\"inline\"",
                      "\"scroll-timeline-name should be canonical\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "e.style['scroll-timeline'] = \"horizontal inline\" should not set unrelated longhands",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_true: expected true got false",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/css/support/shorthand-testcommon.js:31:13)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at test_shorthand_value (http://web-platform.test:8000/css/support/shorthand-testcommon.js:25:5)\n    at http://web-platform.test:8000/scroll-animations/css/scroll-timeline-shorthand.tentative.html:40:1",
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/cancel-animation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Canceling an animation should cause its start time and hold time to be unresolved",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "A play-pending ready promise should be rejected when the animation is canceled",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "A pause-pending ready promise should be rejected when the animation is canceled",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "When an animation is canceled, it should create a resolved Promise",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "The ready promise should be replaced when the animation is canceled",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "The finished promise should NOT be rejected if the animation is already idle",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "The cancel event should NOT be fired if the animation is already idle",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Canceling an animation should fire cancel event on orphaned element",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Canceling an animation with inactive timeline should cause its start time and hold time to be unresolved",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "oncancel event is fired when the timeline is inactive.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: event.timelineTime should be unresolved when the timeline is inactive expected (object) null but got (number) 941.966",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/cancel-animation.html:216:3)",
                    "index": 10,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Canceling an animation should cause its start time and hold time to be unresolved",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time of a canceled animation should be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Canceling an animation should cause its start time and hold time to be unresolved",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The hold time of a canceled animation should be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A play-pending ready promise should be rejected when the animation is canceled",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"AbortError\"",
                      "\"AbortError\"",
                      "\"ready promise is rejected with AbortError\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "When an animation is canceled, it should create a resolved Promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Object]\"",
                      "object \"[object Object]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The ready promise should be replaced when the animation is canceled",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The finished promise should NOT be rejected if the animation is already idle",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"idle\"",
                      "\"idle\"",
                      "\"The animation should be initially idle\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The cancel event should NOT be fired if the animation is already idle",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"idle\"",
                      "\"idle\"",
                      "\"The animation should be initially idle\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Canceling an animation should fire cancel event on orphaned element",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"cancel event should be fired for the animation on an orphaned element\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Canceling an animation with inactive timeline should cause its start time and hold time to be unresolved",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Canceling an animation with inactive timeline should cause its start time and hold time to be unresolved",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time of a canceled animation should be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Canceling an animation with inactive timeline should cause its start time and hold time to be unresolved",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time of a canceled animation should be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "oncancel event is fired when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: event.timelineTime should be unresolved when the timeline is inactive expected (object) null but got (number) 941.966",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/cancel-animation.html:216:3)",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "oncancel event is fired when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: event.timelineTime should be unresolved when the timeline is inactive expected (object) null but got (number) 941.966",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/cancel-animation.html:216:3)",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"event.currentTime should be unresolved when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "oncancel event is fired when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: event.timelineTime should be unresolved when the timeline is inactive expected (object) null but got (number) 941.966",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/cancel-animation.html:216:3)",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "941.966",
                      "null",
                      "\"event.timelineTime should be unresolved when the timeline is inactive\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/constructor-no-document.html",
              []
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/constructor.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "A ScrollTimeline can be created with a source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "A ScrollTimeline can be created with a non-scrolling source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "A ScrollTimeline created with a null source should have no source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "A ScrollTimeline created without a source should use the document.scrollingElement",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "A ScrollTimeline created with the default orientation should default to 'block'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "'block' is a valid orientation value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "'inline' is a valid orientation value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "'horizontal' is a valid orientation value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "'vertical' is a valid orientation value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Creating a ScrollTimeline with an invalid orientation value should throw",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A ScrollTimeline can be created with a source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "Element node <div class=\"scroller\">   <div class=\"content\"></div> </div>",
                      "Element node <div class=\"scroller\">   <div class=\"content\"></div> </div>"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A ScrollTimeline can be created with a non-scrolling source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "Element node <div></div>",
                      "Element node <div></div>"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A ScrollTimeline created with a null source should have no source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A ScrollTimeline created without a source should use the document.scrollingElement",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "Element node <html><head> <meta charset=\"utf-8\"> <title>ScrollTimeline...",
                      "Element node <html><head> <meta charset=\"utf-8\"> <title>ScrollTimeline..."
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A ScrollTimeline created with the default orientation should default to 'block'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"block\"",
                      "\"block\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "'block' is a valid orientation value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"block\"",
                      "\"block\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "'inline' is a valid orientation value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"inline\"",
                      "\"inline\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "'horizontal' is a valid orientation value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"horizontal\"",
                      "\"horizontal\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "'vertical' is a valid orientation value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"vertical\"",
                      "\"vertical\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Creating a ScrollTimeline with an invalid orientation value should throw",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"function() {     new ScrollTimeline({orientation: 'nonsense'})   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Creating a ScrollTimeline with an invalid orientation value should throw",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"function() {     new ScrollTimeline({orientation: 'auto'})   }\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "currentTime should be null for a display: inline source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected null but got object \"100%\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:39:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:34:1",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "currentTime should be null for a display: none source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "currentTime should be null for an unattached source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected null but got object \"100%\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:72:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:57:1",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "currentTime should be null when the source is not a scroller",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime should be null for a display: inline source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected null but got object \"100%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:39:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:34:1",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "object \"100%\"",
                      "null"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime should be null for a display: none source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime should be null for an unattached source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected null but got object \"100%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:72:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-nan.html:57:1",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "object \"100%\"",
                      "null"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime should be null when the source is not a scroller",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-root-scroller.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "currentTime calculates the correct time for a document.scrollingElement source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime calculates the correct time for a document.scrollingElement source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/current-time-writing-modes.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "currentTime handles direction: rtl correctly",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "currentTime handles writing-mode: vertical-rl correctly",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "currentTime handles writing-mode: vertical-lr correctly",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "80",
                      "80",
                      "0.125",
                      "\"values do not match for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "80",
                      "80",
                      "0.125",
                      "\"values do not match for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles direction: rtl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "80",
                      "80",
                      "0.125",
                      "\"values do not match for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "80",
                      "80",
                      "0.125",
                      "\"values do not match for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-rl correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Unscrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Scrolled block timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Scrolled inline timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Scrolled horizontal timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "currentTime handles writing-mode: vertical-lr correctly",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Scrolled vertical timeline\\\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Allows setting the delay to a positive number",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the delay to a negative number",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the delay of an animation in progress: positive delay that causes the animation to be no longer in-effect",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the delay of an animation in progress: negative delay that seeks into the active interval",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the delay of an animation in progress: large negative delay that causes the animation to be finished",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid delay value: NaN",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid delay value: Infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid delay value: -Infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the endDelay to a positive number",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the endDelay to a negative number",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting the endDelay to infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting the endDelay to negative infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the fill to 'none'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the fill to 'forwards'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the fill to 'backwards'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the fill to 'both'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the iterationStart of an animation in progress: backwards-filling",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the iterationStart of an animation in progress: active phase",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid iterationStart value: -1",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid iterationStart value: NaN",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 21,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid iterationStart value: Infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 22,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid iterationStart value: -Infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 23,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting iterations to a double value",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 24,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting iterations to Infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 25,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the iterations of an animation in progress",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: progress after adding an iteration expected 1 but got 0",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:262:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:248:1",
                    "index": 26,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 27,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the duration to 123.45",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 28,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the duration to auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 29,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid duration: -1",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 30,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid duration: NaN",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 31,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid duration: Infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 32,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid duration: -Infinity",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 33,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid duration: \"abc\"",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 34,
                    "phase": 4
                  },
                  {
                    "name": "Throws when setting invalid duration: \"100\"",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 35,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the duration of an animation in progress",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_approx_equals: progress after doubling the duration expected 1 +/- 0.0005 but got 0.5",
                    "stack": "    at window.assert_time_equals_literal (http://web-platform.test:8000/web-animations/testcommon.js:34:7)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:382:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:375:1",
                    "index": 36,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 37,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the direction to each of the possible keywords",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 38,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 39,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse' while at start of active interval",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 40,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse' while filling backwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 41,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the direction of an animation in progress from 'normal' to 'alternate'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 42,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the direction of an animation in progress from 'alternate' to 'alternate-reverse'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 43,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a step-start function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 44,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a steps(1, start) function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 45,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a steps(2, start) function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 46,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a step-end function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 47,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a steps(1) function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 48,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a steps(1, end) function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 49,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a steps(2, end) function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 50,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a linear function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 51,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a ease function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 52,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a ease-in function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 53,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a ease-in-out function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 54,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a ease-out function",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 55,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a easing function which produces values greater than 1",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 56,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing to a easing function which produces values less than 1",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 57,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'ease'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 58,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'linear'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 59,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'ease-in'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 60,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'ease-out'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 61,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'ease-in-out'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 62,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'cubic-bezier(0.1, 5, 0.23, 0)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 63,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'steps(3, start)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 64,
                    "phase": 4
                  },
                  {
                    "name": "Updates the specified value when setting the easing to 'steps(3)'",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 65,
                    "phase": 4
                  },
                  {
                    "name": "Allows setting the easing of an animation in progress",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 66,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay to a negative number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "-100",
                      "-100",
                      "\"set delay -100\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay to a negative number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "-100",
                      "-100",
                      "\"getComputedTiming() after set delay -100\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay to a negative number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"getComputedTiming().endTime after set delay -100\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the delay to a negative number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"getComputedTiming().endTime after set delay -100\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the delay to a negative number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"getComputedTiming().endTime after set delay -100\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay of an animation in progress: positive delay that causes the animation to be no longer in-effect",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay of an animation in progress: positive delay that causes the animation to be no longer in-effect",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay of an animation in progress: negative delay that seeks into the active interval",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay of an animation in progress: large negative delay that causes the animation to be finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay of an animation in progress: large negative delay that causes the animation to be finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid delay value: NaN",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       anim.effect.updateTiming({ delay: invalid });     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid delay value: Infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       anim.effect.updateTiming({ delay: invalid });     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid delay value: -Infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       anim.effect.updateTiming({ delay: invalid });     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the endDelay to a positive number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "123.45",
                      "123.45",
                      "0.0005",
                      "\"set endDelay 123.45\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the endDelay to a positive number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "123.45",
                      "123.45",
                      "0.0005",
                      "\"getComputedTiming() after set endDelay 123.45\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the endDelay to a negative number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "-1000",
                      "-1000",
                      "\"set endDelay -1000\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the endDelay to a negative number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "-1000",
                      "-1000",
                      "\"getComputedTiming() after set endDelay -1000\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting the endDelay to infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {     anim.effect.updateTiming({ endDelay: Infinity });   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting the endDelay to negative infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {     anim.effect.updateTiming({ endDelay: -Infinity });   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"none\"",
                      "\"set fill none\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'none'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"none\"",
                      "\"getComputedTiming() after set fill none\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'forwards'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"forwards\"",
                      "\"forwards\"",
                      "\"set fill forwards\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'forwards'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"forwards\"",
                      "\"forwards\"",
                      "\"getComputedTiming() after set fill forwards\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'backwards'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"backwards\"",
                      "\"backwards\"",
                      "\"set fill backwards\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'backwards'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"backwards\"",
                      "\"backwards\"",
                      "\"getComputedTiming() after set fill backwards\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'both'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"both\"",
                      "\"both\"",
                      "\"set fill both\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the fill to 'both'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"both\"",
                      "\"both\"",
                      "\"getComputedTiming() after set fill both\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: backwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.0005",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: backwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: active phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.0005",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: active phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "0.0005",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0.30000000000000004",
                      "0.3",
                      "0.0005",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"localTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.0005",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterationStart of an animation in progress: forwards-filling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "3",
                      "3"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid iterationStart value: -1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       anim.effect.updateTiming({ iterationStart: invalid });     }\"",
                      "\"setting -1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid iterationStart value: NaN",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       anim.effect.updateTiming({ iterationStart: invalid });     }\"",
                      "\"setting NaN\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid iterationStart value: Infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       anim.effect.updateTiming({ iterationStart: invalid });     }\"",
                      "\"setting Infinity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid iterationStart value: -Infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       anim.effect.updateTiming({ iterationStart: invalid });     }\"",
                      "\"setting -Infinity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting iterations to a double value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2",
                      "\"set duration 2\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting iterations to a double value",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2",
                      "\"getComputedTiming() after set iterations 2\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting iterations to Infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {     anim.effect.updateTiming({ iterations: Infinity });   }\"",
                      "\"test\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: progress after adding an iteration expected 1 but got 0",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:262:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:248:1",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"progress when animation is finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: progress after adding an iteration expected 1 but got 0",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:262:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:248:1",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"duration when animation is finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: progress after adding an iteration expected 1 but got 0",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:262:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:248:1",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"duration when animation is finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: progress after adding an iteration expected 1 but got 0",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:262:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:248:1",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"duration when animation is finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: progress after adding an iteration expected 1 but got 0",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:262:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:248:1",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"current iteration when animation is finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: progress after adding an iteration expected 1 but got 0",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:262:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:248:1",
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "1",
                      "\"progress after adding an iteration\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"progress when animation is finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"duration when animation is finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"duration when animation is finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"duration when animation is finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"current iteration when animation is finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"progress after adding an iteration\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"duration after adding an iteration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"duration after adding an iteration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"duration after adding an iteration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"current iteration after adding an iteration\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"progress after setting iterations to 4\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"duration after setting iterations to 4\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"duration after setting iterations to 4\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"duration after setting iterations to 4\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "3",
                      "3",
                      "\"current iteration after setting iterations to 4\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"progress after setting iterations to zero\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"duration after setting iterations to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"duration after setting iterations to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"duration after setting iterations to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the iterations of an animation in progress with duration \"auto\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"current iteration after setting iterations to zero\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration to 123.45",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "123.45",
                      "123.45",
                      "0.0005",
                      "\"Updates specified duration\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration to 123.45",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Updates computed duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the duration to 123.45",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Updates computed duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration to 123.45",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Updates computed duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration to auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 29,
                      "phase": 4
                    },
                    "args": [
                      "\"auto\"",
                      "\"auto\"",
                      "\"Updates specified duration\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration to auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 29,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Updates computed duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the duration to auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 29,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Updates computed duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration to auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 29,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Updates computed duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid duration: -1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 30,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       const anim = createScrollLinkedAnimationWithTiming(t,  { duration: invalid })       anim.play();     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid duration: NaN",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 31,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       const anim = createScrollLinkedAnimationWithTiming(t,  { duration: invalid })       anim.play();     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid duration: Infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 32,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       const anim = createScrollLinkedAnimationWithTiming(t,  { duration: invalid })       anim.play();     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid duration: -Infinity",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 33,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       const anim = createScrollLinkedAnimationWithTiming(t,  { duration: invalid })       anim.play();     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid duration: \"abc\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 34,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       const anim = createScrollLinkedAnimationWithTiming(t,  { duration: invalid })       anim.play();     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Throws when setting invalid duration: \"100\"",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 35,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {       const anim = createScrollLinkedAnimationWithTiming(t,  { duration: invalid })       anim.play();     }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_approx_equals: progress after doubling the duration expected 1 +/- 0.0005 but got 0.5",
                      "stack": "    at window.assert_time_equals_literal (http://web-platform.test:8000/web-animations/testcommon.js:34:7)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:382:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:375:1",
                      "index": 36,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"progress when animation is finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_approx_equals: progress after doubling the duration expected 1 +/- 0.0005 but got 0.5",
                      "stack": "    at window.assert_time_equals_literal (http://web-platform.test:8000/web-animations/testcommon.js:34:7)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:382:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at test (http://web-platform.test:8000/resources/testharness.js:628:30)\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/effect-updateTiming.html:375:1",
                      "index": 36,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "1",
                      "0.0005",
                      "\"progress after doubling the duration\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction to each of the possible keywords",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 38,
                      "phase": 4
                    },
                    "args": [
                      "\"normal\"",
                      "\"normal\"",
                      "\"set direction to normal\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction to each of the possible keywords",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 38,
                      "phase": 4
                    },
                    "args": [
                      "\"reverse\"",
                      "\"reverse\"",
                      "\"set direction to reverse\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction to each of the possible keywords",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 38,
                      "phase": 4
                    },
                    "args": [
                      "\"alternate\"",
                      "\"alternate\"",
                      "\"set direction to alternate\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction to each of the possible keywords",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 38,
                      "phase": 4
                    },
                    "args": [
                      "\"alternate-reverse\"",
                      "\"alternate-reverse\"",
                      "\"set direction to alternate-reverse\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse' while at start of active interval",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 40,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"progress before updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse' while at start of active interval",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 40,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"progress after updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse' while filling backwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 41,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"progress before updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse' while filling backwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 41,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"progress after updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'ease'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 58,
                      "phase": 4
                    },
                    "args": [
                      "\"ease\"",
                      "\"ease\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'linear'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 59,
                      "phase": 4
                    },
                    "args": [
                      "\"linear\"",
                      "\"linear\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'ease-in'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 60,
                      "phase": 4
                    },
                    "args": [
                      "\"ease-in\"",
                      "\"ease-in\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'ease-out'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 61,
                      "phase": 4
                    },
                    "args": [
                      "\"ease-out\"",
                      "\"ease-out\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'ease-in-out'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 62,
                      "phase": 4
                    },
                    "args": [
                      "\"ease-in-out\"",
                      "\"ease-in-out\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'cubic-bezier(0.1, 5, 0.23, 0)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 63,
                      "phase": 4
                    },
                    "args": [
                      "\"cubic-bezier(0.1, 5, 0.23, 0)\"",
                      "\"cubic-bezier(0.1, 5, 0.23, 0)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'steps(3, start)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 64,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(3, start)\"",
                      "\"steps(3, start)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updates the specified value when setting the easing to 'steps(3)'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 65,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(3)\"",
                      "\"steps(3)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay to a positive number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "200",
                      "200",
                      "\"initial delay 200\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay to a positive number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "200",
                      "200",
                      "\"getComputedTiming() initially delay 200\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay to a positive number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "\"set delay 100\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the delay to a positive number",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "\"getComputedTiming() after set delay 100\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Initial duration should be as set on KeyframeEffect\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Initial duration should be as set on KeyframeEffect\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Initial duration should be as set on KeyframeEffect\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Effect duration should remain at 100% for progress based animations\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Effect duration should remain at 100% for progress based animations\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Effect duration should remain at 100% for progress based animations\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"startTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"startTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"startTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"startTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"currentTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"currentTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"currentTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the duration of an animation in progress such that the the start and current time do not change",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 37,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"currentTime should be unaffected by changing effect duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 39,
                      "phase": 4
                    },
                    "args": [
                      "0.07",
                      "0.07",
                      "0.0005",
                      "\"progress before updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'reverse'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 39,
                      "phase": 4
                    },
                    "args": [
                      "0.9299999999999999",
                      "0.93",
                      "0.0005",
                      "\"progress after updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'alternate'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 42,
                      "phase": 4
                    },
                    "args": [
                      "0.33999999999999997",
                      "0.34",
                      "0.0005",
                      "\"progress before updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'normal' to 'alternate'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 42,
                      "phase": 4
                    },
                    "args": [
                      "0.33999999999999997",
                      "0.34",
                      "0.0005",
                      "\"progress after updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'alternate' to 'alternate-reverse'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 43,
                      "phase": 4
                    },
                    "args": [
                      "0.33999999999999997",
                      "0.34",
                      "0.0005",
                      "\"progress before updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the direction of an animation in progress from 'alternate' to 'alternate-reverse'",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 43,
                      "phase": 4
                    },
                    "args": [
                      "0.66",
                      "0.66",
                      "0.0005",
                      "\"progress after updating direction\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-start function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 44,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(1, start)\"",
                      "\"steps(1, start)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-start function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 44,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-start function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 44,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-start function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 44,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-start function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 44,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-start function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 44,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 45,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(1, start)\"",
                      "\"steps(1, start)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 45,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 45,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 45,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 45,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 45,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 46,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(2, start)\"",
                      "\"steps(2, start)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 46,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.5 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 46,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.5 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 46,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 46,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, start) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 46,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-end function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 47,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(1)\"",
                      "\"steps(1)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-end function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 47,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-end function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 47,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-end function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 47,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-end function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 47,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a step-end function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 47,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 48,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(1)\"",
                      "\"steps(1)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 48,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 48,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 48,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 48,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 48,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 49,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(1)\"",
                      "\"steps(1)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 49,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 49,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 49,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 49,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(1, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 49,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 50,
                      "phase": 4
                    },
                    "args": [
                      "\"steps(2)\"",
                      "\"steps(2)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 50,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 50,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 50,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.5 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 50,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.5 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a steps(2, end) function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 50,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a linear function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 51,
                      "phase": 4
                    },
                    "args": [
                      "\"linear\"",
                      "\"linear\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a linear function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 51,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a linear function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 51,
                      "phase": 4
                    },
                    "args": [
                      "0.25",
                      "0.24999999941323264",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.24999999941323264 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a linear function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 51,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5000000006984919",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.5000000006984919 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a linear function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 51,
                      "phase": 4
                    },
                    "args": [
                      "0.75",
                      "0.7500000005867673",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.7500000005867673 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a linear function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 51,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 52,
                      "phase": 4
                    },
                    "args": [
                      "\"ease\"",
                      "\"ease\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 52,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 52,
                      "phase": 4
                    },
                    "args": [
                      "0.4085105913555371",
                      "0.40851059137130497",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.40851059137130497 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 52,
                      "phase": 4
                    },
                    "args": [
                      "0.8024033910598437",
                      "0.8024033877399112",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.8024033877399112 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 52,
                      "phase": 4
                    },
                    "args": [
                      "0.9604589783649767",
                      "0.9604589783540816",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.9604589783540816 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 52,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 53,
                      "phase": 4
                    },
                    "args": [
                      "\"ease-in\"",
                      "\"ease-in\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 53,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 53,
                      "phase": 4
                    },
                    "args": [
                      "0.0934646510311063",
                      "0.09346465078656778",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.09346465078656778 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 53,
                      "phase": 4
                    },
                    "args": [
                      "0.31535673426536154",
                      "0.3153568125595917",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.3153568125595917 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 53,
                      "phase": 4
                    },
                    "args": [
                      "0.621861869174206",
                      "0.6218618686449129",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.6218618686449129 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 53,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 54,
                      "phase": 4
                    },
                    "args": [
                      "\"ease-in-out\"",
                      "\"ease-in-out\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 54,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 54,
                      "phase": 4
                    },
                    "args": [
                      "0.129161931047288",
                      "0.129161930735705",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.129161930735705 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 54,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5000000006984919",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.5000000006984919 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 54,
                      "phase": 4
                    },
                    "args": [
                      "0.8708380689527122",
                      "0.870838069264295",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.870838069264295 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-in-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 54,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 55,
                      "phase": 4
                    },
                    "args": [
                      "\"ease-out\"",
                      "\"ease-out\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 55,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 55,
                      "phase": 4
                    },
                    "args": [
                      "0.378138130825794",
                      "0.37813813135508706",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.37813813135508706 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 55,
                      "phase": 4
                    },
                    "args": [
                      "0.6846432657346383",
                      "0.6846431874404083",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.6846431874404083 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 55,
                      "phase": 4
                    },
                    "args": [
                      "0.9065353489688935",
                      "0.9065353492134323",
                      "0.01",
                      "\"The progress of the animation should be approximately 0.9065353492134323 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a ease-out function",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 55,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values greater than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 56,
                      "phase": 4
                    },
                    "args": [
                      "\"cubic-bezier(0, 1.5, 1, 1.5)\"",
                      "\"cubic-bezier(0, 1.5, 1, 1.5)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values greater than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 56,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values greater than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 56,
                      "phase": 4
                    },
                    "args": [
                      "1.0240666646816106",
                      "1.0240666638411384",
                      "0.01",
                      "\"The progress of the animation should be approximately 1.0240666638411384 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values greater than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 56,
                      "phase": 4
                    },
                    "args": [
                      "1.25",
                      "1.250000000349246",
                      "0.01",
                      "\"The progress of the animation should be approximately 1.250000000349246 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values greater than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 56,
                      "phase": 4
                    },
                    "args": [
                      "1.2950111976795946",
                      "1.2950111975896563",
                      "0.01",
                      "\"The progress of the animation should be approximately 1.2950111975896563 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values greater than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 56,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values less than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 57,
                      "phase": 4
                    },
                    "args": [
                      "\"cubic-bezier(0, -0.5, 1, -0.5)\"",
                      "\"cubic-bezier(0, -0.5, 1, -0.5)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values less than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 57,
                      "phase": 4
                    },
                    "args": [
                      "-0",
                      "0",
                      "0.01",
                      "\"The progress of the animation should be approximately 0 at 0%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values less than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 57,
                      "phase": 4
                    },
                    "args": [
                      "-0.29501119767959444",
                      "-0.29501119758965655",
                      "0.01",
                      "\"The progress of the animation should be approximately -0.29501119758965655 at 0.25%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values less than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 57,
                      "phase": 4
                    },
                    "args": [
                      "-0.25",
                      "-0.24999999965075403",
                      "0.01",
                      "\"The progress of the animation should be approximately -0.24999999965075403 at 0.5%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values less than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 57,
                      "phase": 4
                    },
                    "args": [
                      "-0.024066664681610516",
                      "-0.02406666384113848",
                      "0.01",
                      "\"The progress of the animation should be approximately -0.02406666384113848 at 0.75%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Allows setting the easing to a easing function which produces values less than 1",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 57,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.01",
                      "\"The progress of the animation should be approximately 1 at 1%\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 66,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"easing replace to steps(2, end) at before phase\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 66,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"change currentTime to active phase\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 66,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"easing replace to steps(2, start) at active phase\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Allows setting the easing of an animation in progress",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 66,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"easing replace to steps(2, end) again at after phase\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/finish-animation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Finishing an animation with a zero playback rate throws",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Finishing an animation seeks to the end time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Finishing an animation with a current time past the effect end jumps back to the end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Finishing a reversed animation jumps to zero time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Finishing a reversed animation with a current time less than zero makes it jump back to zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Finishing an animation while play-pending resolves the pending task immediately",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Finishing an animation attached to inactive timeline while play-pending doesn't resolves the pending task",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Finishing an animation resolves the finished promise synchronously",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "A pending ready promise is resolved and not replaced when the animation is finished",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Finishing an animation fires finish event on orphaned element",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Finishing a canceled animation sets the current and start times",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Finishing idle animation produces correct state and fires finish event.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Finishing idle animation attached to inactive timeline pauses the animation.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Finishing running animation produces correct state and fires finish event.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Finishing running animation attached to inactive timeline pauses the animation.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Finishing a paused animation resolves the start time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "Finishing a pause-pending animation resolves the pending task immediately and update the start time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "Finishing a pause-pending animation with negative playback rate resolves the pending task immediately",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "Finishing an animation during an aborted pause makes it finished immediately",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "A pending playback rate should be applied immediately when an animation is finished",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "An exception should be thrown if the effective playback rate is zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 21,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Finishing an animation with a zero playback rate throws",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"InvalidStateError\"",
                      "function \"() => {     animation.finish();   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation seeks to the end time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"After finishing, the currentTime should be set to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing an animation seeks to the end time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"After finishing, the currentTime should be set to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing an animation seeks to the end time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"After finishing, the currentTime should be set to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation with a current time past the effect end jumps back to the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"After finishing, the currentTime should be set back to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing an animation with a current time past the effect end jumps back to the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"After finishing, the currentTime should be set back to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing an animation with a current time past the effect end jumps back to the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"After finishing, the currentTime should be set back to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a reversed animation jumps to zero time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"After finishing a reversed animation the currentTime should be set to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing a reversed animation jumps to zero time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"After finishing a reversed animation the currentTime should be set to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing a reversed animation jumps to zero time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"After finishing a reversed animation the currentTime should be set to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a reversed animation with a current time less than zero makes it jump back to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"After finishing a reversed animation the currentTime should be set back to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing a reversed animation with a current time less than zero makes it jump back to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"After finishing a reversed animation the currentTime should be set back to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing a reversed animation with a current time less than zero makes it jump back to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"After finishing a reversed animation the currentTime should be set back to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Finishing an animation while play-pending resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation while play-pending resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"The play state of a play-pending animation should become \\\"finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation while play-pending resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time of a play-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing an animation while play-pending resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time of a play-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing an animation while play-pending resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "-200",
                      "-200",
                      "0.125",
                      "\"values do not match for \\\"The start time of a play-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing an animation attached to inactive timeline while play-pending doesn't resolves the pending task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation attached to inactive timeline while play-pending doesn't resolves the pending task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"The play state of a play-pending animation should become \\\"finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation attached to inactive timeline while play-pending doesn't resolves the pending task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time of a play-pending animation should be set to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing an animation attached to inactive timeline while play-pending doesn't resolves the pending task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time of a play-pending animation should be set to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing an animation attached to inactive timeline while play-pending doesn't resolves the pending task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"The current time of a play-pending animation should be set to the end of the active duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation attached to inactive timeline while play-pending doesn't resolves the pending task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time of a finished play-pending animation should be be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing an animation resolves the finished promise synchronously",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"finished promise should be resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending ready promise is resolved and not replaced when the animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Object]\"",
                      "object \"[object Object]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending ready promise is resolved and not replaced when the animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "A pending ready promise is resolved and not replaced when the animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation fires finish event on orphaned element",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"finish event should be fired for the animation on an orphaned element\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\"",
                      "\"Canceling an animation should create a new finished promise\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"The play state of a canceled animation should become \\\"finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time of a finished animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time of a finished animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "-100",
                      "-100",
                      "0.125",
                      "\"values do not match for \\\"The start time of a finished animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time should be set to end boundary of the animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time should be set to end boundary of the animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing a canceled animation sets the current and start times",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Hold time should be set to end boundary of the animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"Animation is finished.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is the end of the active duration in finished state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is the end of the active duration in finished state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"The current time is the end of the active duration in finished state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is calculated to match the current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is calculated to match the current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "-75",
                      "-75",
                      "0.125",
                      "\"values do not match for \\\"The start time is calculated to match the current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"event.currentTime is the animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"event.currentTime is the animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"event.currentTime is the animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"event.timelineTime is timeline.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"event.timelineTime is timeline.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing idle animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"event.timelineTime is timeline.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing idle animation attached to inactive timeline pauses the animation.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing idle animation attached to inactive timeline pauses the animation.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Animation is paused.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"Animation is finished.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is the end of active duration in finished state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is the end of active duration in finished state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"The current time is the end of active duration in finished state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is calculated to match animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is calculated to match animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "-75",
                      "-75",
                      "0.125",
                      "\"values do not match for \\\"The start time is calculated to match animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"event.currentTime is the animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"event.currentTime is the animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"event.currentTime is the animation current time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"event.timelineTime is timeline.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"event.timelineTime is timeline.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing running animation produces correct state and fires finish event.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"event.timelineTime is timeline.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation attached to inactive timeline pauses the animation.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation attached to inactive timeline pauses the animation.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Sanity check the animation is running.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing running animation attached to inactive timeline pauses the animation.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Animation is paused.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a paused animation resolves the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"The play state of a paused animation should become \\\"finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a paused animation resolves the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time of a paused animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing a paused animation resolves the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time of a paused animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing a paused animation resolves the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "-100",
                      "-100",
                      "0.125",
                      "\"values do not match for \\\"The start time of a paused animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Finishing a pause-pending animation resolves the pending task immediately and update the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a pause-pending animation resolves the pending task immediately and update the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"The play state of a pause-pending animation should become \\\"finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a pause-pending animation resolves the pending task immediately and update the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time of a pause-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing a pause-pending animation resolves the pending task immediately and update the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time of a pause-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing a pause-pending animation resolves the pending task immediately and update the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "-50",
                      "-50",
                      "0.125",
                      "\"values do not match for \\\"The start time of a pause-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Finishing a pause-pending animation with negative playback rate resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a pause-pending animation with negative playback rate resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"The play state of a pause-pending animation should become \\\"finished\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a pause-pending animation with negative playback rate resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time of a pause-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finishing a pause-pending animation with negative playback rate resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time of a pause-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing a pause-pending animation with negative playback rate resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The start time of a pause-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finishing a pause-pending animation with negative playback rate resolves the pending task immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time of a pause-pending animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finishing an animation during an aborted pause makes it finished immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"After aborting a pause then finishing an animation its play state should become \\\"finished\\\" immediately\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "A pending playback rate should be applied immediately when an animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "A pending playback rate should be applied immediately when an animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending playback rate should be applied immediately when an animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending playback rate should be applied immediately when an animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "A pending playback rate should be applied immediately when an animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "A pending playback rate should be applied immediately when an animation is finished",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "An exception should be thrown if the effective playback rate is zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "\"InvalidStateError\"",
                      "function \"() => {     animation.finish();   }\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/idlharness.window.js",
              []
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/pause-animation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Pausing clears the start time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Aborting a pause preserves the start time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "A pending ready promise should be resolved and not replaced when the animation is paused",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "A pause-pending animation maintains the current time when applying a pending playback rate",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "The animation's current time remains fixed after pausing",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Pausing a canceled animation sets the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Pause pending task doesn't run when the timeline is inactive.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Animation start and current times are correct if scroll timeline is activated after animation.pause call.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time does not change when pausing-pending\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pausing clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time does not change when pausing-pending\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The start time does not change when pausing-pending\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pausing clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time does not change when pausing-pending\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time is unresolved when paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Aborting a pause preserves the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "object \"0%\"",
                      "null",
                      "\"The start time is resolved when pause-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Aborting a pause preserves the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "object \"0%\"",
                      "null",
                      "\"The start time is preserved when a pause is aborted\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending ready promise should be resolved and not replaced when the animation is paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Object]\"",
                      "object \"[object Object]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending ready promise should be resolved and not replaced when the animation is paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "A pending ready promise should be resolved and not replaced when the animation is paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"No longer pause-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_greater_than_equal",
                    "test": {
                      "name": "A pause-pending animation maintains the current time when applying a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The animation's current time remains fixed after pausing",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Sanity check timeline time changed\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "The animation's current time remains fixed after pausing",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Sanity check timeline time changed\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "The animation's current time remains fixed after pausing",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Sanity check timeline time changed\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The animation's current time remains fixed after pausing",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation.currentTime is unchanged after pausing\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "The animation's current time remains fixed after pausing",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation.currentTime is unchanged after pausing\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The animation's current time remains fixed after pausing",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"Animation.currentTime is unchanged after pausing\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "The animation's current time remains fixed after pausing",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation.currentTime is unchanged after pausing\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\"",
                      "\"Canceling an animation should create a new ready promise\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Pausing a canceled animation should update the play state\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"animation should be pause-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation should no longer be pause-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"start time should be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"current time should be set to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"current time should be set to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pausing a canceled animation sets the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"current time should be set to zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time is null when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation has pause pending task while the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"State is 'paused' in Pending state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.pause call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.pause call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.pause call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.pause call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Animation current time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.pause call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation start time is unresolved when the animation is ready.\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/play-animation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Playing a running animation leaves the current time unchanged",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Playing a finished animation seeks back to the start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Playing a finished and reversed animation seeks to end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Playing a pause-pending but previously finished animation seeks back to to the start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Playing a finished animation clears the start time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "The ready promise should be replaced if the animation is not already pending",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "A pending ready promise should be resolved and not replaced when the animation enters the running state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Resuming an animation from paused calculates start time from hold time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "If a pause operation is interrupted, the ready promise is reused",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "A pending playback rate is used when determining auto-rewind behavior",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Playing a canceled animation sets the start time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Playing a canceled animation backwards sets the start time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a running animation leaves the current time unchanged",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a running animation leaves the current time unchanged",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a running animation leaves the current time unchanged",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a running animation leaves the current time unchanged",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a running animation leaves the current time unchanged",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a running animation leaves the current time unchanged",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a finished animation seeks back to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a finished animation seeks back to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a finished animation seeks back to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a finished animation seeks back to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a finished animation seeks back to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a finished animation seeks back to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a finished and reversed animation seeks to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a finished and reversed animation seeks to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a finished and reversed animation seeks to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a finished and reversed animation seeks to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a finished and reversed animation seeks to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a finished and reversed animation seeks to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a pause-pending but previously finished animation seeks back to to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"After aborting a pause when finished, the current time should jump back to the start of the animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a pause-pending but previously finished animation seeks back to to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"After aborting a pause when finished, the current time should jump back to the start of the animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a pause-pending but previously finished animation seeks back to to the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"After aborting a pause when finished, the current time should jump back to the start of the animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a finished animation clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a finished animation clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a finished animation clears the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "The ready promise should be replaced if the animation is not already pending",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending ready promise should be resolved and not replaced when the animation enters the running state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Object]\"",
                      "object \"[object Object]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending ready promise should be resolved and not replaced when the animation enters the running state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Resuming an animation from paused calculates start time from hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Resuming an animation from paused calculates start time from hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Resuming an animation from paused calculates start time from hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "-50",
                      "-50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "If a pause operation is interrupted, the ready promise is reused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "If a pause operation is interrupted, the ready promise is reused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is still pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "If a pause operation is interrupted, the ready promise is reused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\"",
                      "\"The pause Promise is re-used when playing while waiting to pause\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "If a pause operation is interrupted, the ready promise is reused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is running after aborting a pause\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "A pending playback rate is used when determining auto-rewind behavior",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending playback rate is used when determining auto-rewind behavior",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "A pending playback rate is used when determining auto-rewind behavior",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "A pending playback rate is used when determining auto-rewind behavior",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "A pending playback rate is used when determining auto-rewind behavior",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a canceled animation sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Start time should be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a canceled animation sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation should be play-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Playing a canceled animation sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"animation should no longer be pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a canceled animation sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time of the playing animation should be zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a canceled animation sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time of the playing animation should be zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a canceled animation sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time of the playing animation should be zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a canceled animation backwards sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Start time should be unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a canceled animation backwards sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation should be play-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Playing a canceled animation backwards sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"Animation should no longer be pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Playing a canceled animation backwards sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time of the playing animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Playing a canceled animation backwards sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time of the playing animation should be set\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Playing a canceled animation backwards sets the start time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"The start time of the playing animation should be set\\\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/reverse-animation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Reversing an animation inverts the playback rate",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation maintains the same current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation does not cause it to leave the pending state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation does not cause it to resolve the ready promise",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation when playbackRate > 0 and currentTime > effect end should make it play from the end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation when playbackRate > 0 and currentTime < 0 should make it play from the end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation when playbackRate < 0 and currentTime < 0 should make it play from the start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation when playbackRate < 0 and currentTime > effect end should make it play from the start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Reversing when when playbackRate == 0 should preserve the current time and playback rate",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an idle animation from starts playing the animation",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation without an active timeline throws an InvalidStateError",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Reversing an animation plays a pausing animation",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Reversing should use the negative pending playback rate",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation inverts the playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"Playback rate should not have changed\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation inverts the playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "-1",
                      "-1",
                      "\"Playback rate should be inverted\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation maintains the same current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time should not change it is in the middle of the animation duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an animation maintains the same current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time should not change it is in the middle of the animation duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing an animation maintains the same current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"The current time should not change it is in the middle of the animation duration\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an animation does not cause it to leave the pending state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"The animation is pending before we call reverse\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an animation does not cause it to leave the pending state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"The animation is still pending after calling reverse\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Reversing an animation does not cause it to resolve the ready promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"ready promise should not have been resolved yet\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate > 0 and currentTime > effect end should make it play from the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"reverse() should start playing from the animation effect end if the playbackRate > 0 and the currentTime > effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an animation when playbackRate > 0 and currentTime > effect end should make it play from the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"reverse() should start playing from the animation effect end if the playbackRate > 0 and the currentTime > effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate > 0 and currentTime > effect end should make it play from the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"reverse() should start playing from the animation effect end if the playbackRate > 0 and the currentTime > effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate > 0 and currentTime < 0 should make it play from the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"reverse() should start playing from the animation effect end if the playbackRate > 0 and the currentTime < 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an animation when playbackRate > 0 and currentTime < 0 should make it play from the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"reverse() should start playing from the animation effect end if the playbackRate > 0 and the currentTime < 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate > 0 and currentTime < 0 should make it play from the end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"reverse() should start playing from the animation effect end if the playbackRate > 0 and the currentTime < 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate < 0 and currentTime < 0 should make it play from the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"reverse() should start playing from the start of animation time if the playbackRate < 0 and the currentTime < 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an animation when playbackRate < 0 and currentTime < 0 should make it play from the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"reverse() should start playing from the start of animation time if the playbackRate < 0 and the currentTime < 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate < 0 and currentTime < 0 should make it play from the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"reverse() should start playing from the start of animation time if the playbackRate < 0 and the currentTime < 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate < 0 and currentTime > effect end should make it play from the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"reverse() should start playing from the start of animation time if the playbackRate < 0 and the currentTime > effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an animation when playbackRate < 0 and currentTime > effect end should make it play from the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"reverse() should start playing from the start of animation time if the playbackRate < 0 and the currentTime > effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing an animation when playbackRate < 0 and currentTime > effect end should make it play from the start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"reverse() should start playing from the start of animation time if the playbackRate < 0 and the currentTime > effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing when when playbackRate == 0 should preserve the current time and playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"reverse() should preserve playbackRate if the playbackRate == 0\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing when when playbackRate == 0 should preserve the current time and playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"reverse() should not affect the currentTime if the playbackRate == 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing when when playbackRate == 0 should preserve the current time and playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"reverse() should not affect the currentTime if the playbackRate == 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing when when playbackRate == 0 should preserve the current time and playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"reverse() should not affect the currentTime if the playbackRate == 0\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an idle animation from starts playing the animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an idle animation from starts playing the animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation.startTime should be at its effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an idle animation from starts playing the animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation.startTime should be at its effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing an idle animation from starts playing the animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation.startTime should be at its effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an idle animation from starts playing the animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation.currentTime should be at its effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing an idle animation from starts playing the animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation.currentTime should be at its effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing an idle animation from starts playing the animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation.currentTime should be at its effect end\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Reversing an animation without an active timeline throws an InvalidStateError",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"InvalidStateError\"",
                      "function \"() => { animation.reverse(); }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing an animation plays a pausing animation",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Animation.playState should be \\\"running\\\" after reverse()\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing should use the negative pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "-2",
                      "-2"
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-fill-modes.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Scroll based animation effect fill mode should return 'auto' for getTiming() and should return 'none' for getComputedTiming().",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value before start delay with fill: none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at start delay with fill: none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at midpoint with fill: none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at effect end with fill: none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value after effect end with fill: none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value before start delay with fill: backwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at start delay with fill: backwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at midpoint with fill: backwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at effect end with fill: backwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value after effect end with fill: backwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value before timeline start with fill: forwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at timeline start with fill: forwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value in timeline range with fill: forwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at timeline end with fill: forwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value after timeline end with fill: forwards",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value before timeline start with fill: both",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at timeline start with fill: both",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value in timeline range with fill: both",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at timeline end with fill: both",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value after timeline end with fill: both",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 21,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value before timeline start with fill: auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 22,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at timeline start with fill: auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 23,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value in timeline range with fill: auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 24,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value at timeline end with fill: auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 25,
                    "phase": 4
                  },
                  {
                    "name": "Applied effect value after timeline end with fill: auto",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 26,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Scroll based animation effect fill mode should return 'auto' for getTiming() and should return 'none' for getComputedTiming().",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"auto\"",
                      "\"auto\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Scroll based animation effect fill mode should return 'auto' for getTiming() and should return 'none' for getComputedTiming().",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"none\"",
                      "\"none\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value before start delay with fill: none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at start delay with fill: none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at midpoint with fill: none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at effect end with fill: none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value after effect end with fill: none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value before start delay with fill: backwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at start delay with fill: backwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at midpoint with fill: backwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at effect end with fill: backwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value after effect end with fill: backwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value before timeline start with fill: forwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at timeline start with fill: forwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value in timeline range with fill: forwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at timeline end with fill: forwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "0.7",
                      "0.7",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value after timeline end with fill: forwards",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "0.7",
                      "0.7",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value before timeline start with fill: both",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at timeline start with fill: both",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value in timeline range with fill: both",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at timeline end with fill: both",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "0.7",
                      "0.7",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value after timeline end with fill: both",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0.7",
                      "0.7",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value before timeline start with fill: auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at timeline start with fill: auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value in timeline range with fill: auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value at timeline end with fill: auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Applied effect value after timeline end with fill: auto",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "\"animation effect applied property value\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                    "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                    "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 21,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 22,
                    "phase": 4
                  },
                  {
                    "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                    "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                    "index": 23,
                    "phase": 4
                  },
                  {
                    "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 24,
                    "phase": 4
                  },
                  {
                    "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 25,
                    "phase": 4
                  },
                  {
                    "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 26,
                    "phase": 4
                  },
                  {
                    "name": "Make scroller inactive, then set current time to an in range time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: effect local time with inactive timeline expected null but got object \"0%\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:414:5)",
                    "index": 27,
                    "phase": 4
                  },
                  {
                    "name": "Animation effect is still applied after pausing and making timeline inactive.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 28,
                    "phase": 4
                  },
                  {
                    "name": "Make timeline inactive, force style update then pause the animation. No crashing indicates test success.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 29,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in active phase when current time is 0%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "null",
                      "\"Animation effect is in active phase when current time is 50%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "1",
                      "\"animation effect progress\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in before phase when current time is 0% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in before phase when current time is 0% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in before phase when current time is 25% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in before phase when current time is 25% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in active phase when current time is 50%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "null",
                      "\"Animation effect is in active phase when current time is 75%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 500 and endDelay = 0 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 1 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "1",
                      "\"animation effect progress\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in active phase when current time is 0%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "null",
                      "\"Animation effect is in active phase when current time is 25%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in after phase when current time is 50% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "null",
                      "\"Animation effect is in after phase when current time is 50% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in after phase when current time is 75% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "null",
                      "\"Animation effect is in after phase when current time is 75% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in after phase when current time is 100% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "null",
                      "\"Animation effect is in after phase when current time is 100% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 0 and endDelay = 500 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in before phase when current time is 0% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in before phase when current time is 0% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in before phase when current time is 10% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in before phase when current time is 10% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase before start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "null",
                      "\"Animation effect is in active phase when current time is 25%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at start delay when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 16,
                      "phase": 4
                    },
                    "args": [
                      "0.3",
                      "0.3",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "null",
                      "\"Animation effect is in active phase when current time is 50%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 17,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in after phase when current time is 75% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "null",
                      "\"Animation effect is in after phase when current time is 75% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 18,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "90",
                      "90",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "90",
                      "90",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "90",
                      "90",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in after phase when current time is 90% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "null",
                      "\"Animation effect is in after phase when current time is 90% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase after effect end time when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 19,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Animation effect is in after phase when current time is 100% (progress is null with 'none' fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "null",
                      "\"Animation effect is in after phase when current time is 100% (progress is non-null with appropriate fill mode)\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline boundary when delay = 250 and endDelay = 250 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0.25",
                      "0.25",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0.25",
                      "null",
                      "\"Animation effect is in active phase when current time is 0%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline start when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "0.4",
                      "0.4",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"animation effect progress\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "null",
                      "\"Animation effect is in active phase when current time is 50%.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase in active range when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 22,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "0.001",
                      "\"target opacity\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"timeline current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"animation effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Current times and effect phase at timeline end when delay = -125 and endDelay = -125 |",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: animation effect progress expected (number) 0.75 but got (object) null",
                      "stack": "    at assert_approx_equals_or_null (http://web-platform.test:8000/scroll-animations/scroll-timelines/testcommon.js:90:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:222:7)",
                      "index": 23,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "0.75",
                      "\"animation effect progress\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Verify that (play -> pause -> play) doesn't change phase/progress.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 24,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"effect local time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, scroll timeline into active phase, animation should remain in the before phase",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is not in effect\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"1\"",
                      "\"1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"0.3\"",
                      "\"0.3\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Current time matches set value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Current time matches set value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Current time matches set value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Effect local time after setting animation.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Effect local time after setting animation.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Effect local time after setting animation.currentTime\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"Progress after setting animation.currentTime\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"0.5\"",
                      "\"0.5\"",
                      "\"Opacity after setting animation.currentTime\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "75",
                      "75",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Current time after scrolling while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Current time after scrolling while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Current time after scrolling while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Effect local time after scrolling while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Effect local time after scrolling while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Effect local time after scrolling while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"Progress after scrolling while paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Pause in before phase, set animation current time to be in active range, animation should become active. Scrolling should have no effect.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 26,
                      "phase": 4
                    },
                    "args": [
                      "\"0.5\"",
                      "\"0.5\"",
                      "\"Opacity after scrolling while paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Make scroller inactive, then set current time to an in range time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: effect local time with inactive timeline expected null but got object \"0%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:414:5)",
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Timeline is inactive\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Make scroller inactive, then set current time to an in range time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: effect local time with inactive timeline expected null but got object \"0%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:414:5)",
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Current time for running animation with an inactive timeline\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Make scroller inactive, then set current time to an in range time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: effect local time with inactive timeline expected null but got object \"0%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-effect-phases.tentative.html:414:5)",
                      "index": 27,
                      "phase": 4
                    },
                    "args": [
                      "object \"0%\"",
                      "null",
                      "\"effect local time with inactive timeline\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation effect is still applied after pausing and making timeline inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"Verify effect progress after pausing.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation effect is still applied after pausing and making timeline inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation effect is still applied after pausing and making timeline inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 28,
                      "phase": 4
                    },
                    "args": [
                      "0.5",
                      "0.5",
                      "\"Verify effect progress after the timeline goes inactive.\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Play pending task doesn't run when the timeline is inactive.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                    "index": 4,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Play pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Play pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time is null when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Play pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Play pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Play pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Play pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation has play pending task while timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Play pending task doesn't run when the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"State is 'running' in Pending state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation current time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation start time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation start time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after animation.play call.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation start time is resolved when the animation is ready.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check current time is unresolved when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation current time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation start time is resolved.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation start time is resolved.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation start time is resolved.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Effect local time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Effect local time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Effect local time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct if scroll timeline is activated after setting start time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"Animation has an effect when the timeline is active.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"State is 'running' when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Current time is unresolved when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Start time is zero when the timeline is inactive.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Start time is zero when the timeline is inactive.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Start time is zero when the timeline is inactive.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time is correct when the timeline becomes newly inactive and then active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: Effect local time is null when the timeline is inactive. expected null but got object \"20%\"",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation-inactive-timeline.html:156:5)",
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "object \"20%\"",
                      "null",
                      "\"Effect local time is null when the timeline is inactive.\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Animation start and current times are correct for each animation state.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Finished animation plays on reverse scrolling.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Sending animation finished events by finished animation on reverse scrolling.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_false: No animation finished event is sent on reverse scroll. expected false got true",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation.html:209:5)",
                    "index": 5,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is in pending state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The current time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The current time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The current time corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "40",
                      "40",
                      "0.125",
                      "\"values do not match for \\\"The current time corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0.4",
                      "0.4",
                      "0.001",
                      "\"Effect progress corresponds to the scroll position of the scroller.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is a hold time in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is a hold time in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The current time is a hold time in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"The current time is a hold time in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct for each animation state when the animation starts playing with advanced scroller.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time is null in Idle state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "40",
                      "40",
                      "0.125",
                      "\"values do not match for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "40",
                      "40",
                      "0.125",
                      "\"values do not match for \\\"The current time corresponds to the scroll position of the scroller in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Pending state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "40",
                      "40",
                      "0.125",
                      "\"values do not match for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "40",
                      "40",
                      "0.125",
                      "\"values do not match for \\\"The current corresponds to the scroll position of the scroller.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation start and current times are correct when multiple animations are attached to the same timeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is zero in Playing state.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"Animation state is in finished state.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time is at 100% on reverse scrolling.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time is at 100% on reverse scrolling.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Animation current time is at 100% on reverse scrolling.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Animation state is playing on reverse scrolling.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time is updated on reverse scrolling.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time is updated on reverse scrolling.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Finished animation plays on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Animation current time is updated on reverse scrolling.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Sending animation finished events by finished animation on reverse scrolling.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_false: No animation finished event is sent on reverse scroll. expected false got true",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-animation.html:209:5)",
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"No animation finished event is sent on reverse scroll.\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Animation current time and effect local time are updated after scroller content size changes.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 45 but got 20",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Animation current time and effect local time are updated after scroller size changes.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected 36 but got 20",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "If scroll animation resizes its scroll timeline scroller, layout runs only once to reflect the initial update.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_approx_equals: Timeline current time is updated after animation frame. expected 20 +/- 0.001 but got 16.917293233082706",
                    "stack": "    at window.assert_times_equal (http://web-platform.test:8000/web-animations/testcommon.js:14:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:127:3)",
                    "index": 3,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "180",
                      "180"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "900",
                      "900"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "180",
                      "180"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "400",
                      "400"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "45",
                      "45"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "45",
                      "45"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller content size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 45 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:68:3)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "45"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "180",
                      "180"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "900",
                      "900"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "180",
                      "180"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "500",
                      "500"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "36",
                      "36"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "36",
                      "36"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and effect local time are updated after scroller size changes.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected 36 but got 20",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:105:3)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "36"
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "If scroll animation resizes its scroll timeline scroller, layout runs only once to reflect the initial update.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_approx_equals: Timeline current time is updated after animation frame. expected 20 +/- 0.001 but got 16.917293233082706",
                      "stack": "    at window.assert_times_equal (http://web-platform.test:8000/web-animations/testcommon.js:14:5)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-invalidation.html:127:3)",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "16.917293233082706",
                      "20",
                      "0.001",
                      "\"Timeline current time is updated after animation frame.\""
                    ],
                    "status": 1
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/scroll-timeline-snapshotting.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "ScrollTimeline current time is updated after programmatic animated scroll.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 2,
                    "message": "Test timed out",
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 2,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "ScrollTimeline current time is updated after programmatic animated scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 2,
                      "message": "Test timed out",
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "\"verify test pre-condition\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/setting-current-time.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Setting animation current time to null throws TypeError.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Setting the current time to an absolute time value throws exception",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Set animation current time to a valid value without playing.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Set animation current time to a valid value while playing.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Set animation current time to a value beyond effect end.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Set animation current time to a negative value.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Setting current time while play pending overrides the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Set Animation current time then scroll.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Animation current time and play state are correct when current time is set while the timeline is inactive.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_throws_js",
                    "test": {
                      "name": "Setting animation current time to null throws TypeError.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "function \"function TypeError() { [native code] }\"",
                      "function \"() => {     animation.currentTime = null;   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Setting the current time to an absolute time value throws exception",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"NotSupportedError\"",
                      "function \"() => {     animation.currentTime = CSSNumericValue.parse(\"300\");   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Setting the current time to an absolute time value throws exception",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"NotSupportedError\"",
                      "function \"() => {     animation.currentTime = CSSNumericValue.parse(\"300ms\");   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Setting the current time to an absolute time value throws exception",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"NotSupportedError\"",
                      "function \"() => {     animation.currentTime = CSSNumericValue.parse(\"0.3s\");   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set animation current time to a valid value without playing.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Set animation current time to a valid value without playing.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Set animation current time to a valid value without playing.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "33.3",
                      "33.3",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set animation current time to a valid value while playing.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Set animation current time to a valid value while playing.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Set animation current time to a valid value while playing.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "33.3",
                      "33.3",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set animation current time to a value beyond effect end.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set animation current time to a value beyond effect end.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Set animation current time to a value beyond effect end.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Set animation current time to a value beyond effect end.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "200",
                      "200",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set animation current time to a negative value.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set animation current time to a negative value.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Set animation current time to a negative value.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Set animation current time to a negative value.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "-10",
                      "-10",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting current time while play pending overrides the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting current time while play pending overrides the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting current time while play pending overrides the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting current time while play pending overrides the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting current time while play pending overrides the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "30",
                      "30",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "33.3",
                      "33.3",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should return to a value matching its timeline current time after animation is cancelled and played again.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should return to a value matching its timeline current time after animation is cancelled and played again.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"Animation current time should return to a value matching its timeline current time after animation is cancelled and played again.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting animation.currentTime then restarting the animation should reset the current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should return to a value matching its timeline current time after animation is cancelled and played again.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be updated when setting the current time to a time within the range of the animation.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be updated when setting the current time to a time within the range of the animation.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "-25",
                      "-25",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be updated when setting the current time to a time within the range of the animation.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation start time should remain unchanged when the scroller changes position.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation start time should remain unchanged when the scroller changes position.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "-25",
                      "-25",
                      "0.125",
                      "\"values do not match for \\\"Animation start time should remain unchanged when the scroller changes position.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should return to a value equal to (timeline.currentTime - animation.startTime) after timeline scroll source has been scrolled.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should return to a value equal to (timeline.currentTime - animation.startTime) after timeline scroll source has been scrolled.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Set Animation current time then scroll.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "95",
                      "95",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should return to a value equal to (timeline.currentTime - animation.startTime) after timeline scroll source has been scrolled.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and play state are correct when current time is set while the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Current time is unresolved when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and play state are correct when current time is set while the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation current time and play state are correct when current time is set while the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation current time and play state are correct when current time is set while the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "30",
                      "30",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time and play state are correct when current time is set while the timeline is inactive.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Animation play state is 'paused' when current time is set and timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Current time is unresolved when the timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "30",
                      "30",
                      "0.125",
                      "\"values do not match for \\\"Animation current time should be equal to the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Animation play state is 'paused' when current time is set and timeline is inactive.\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Current time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Current time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Current time is resolved when the timeline is active.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation current time holds the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation current time holds the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "30",
                      "30",
                      "0.125",
                      "\"values do not match for \\\"Animation current time holds the set value.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Animation current time set while the timeline is inactive holds when the timeline becomes active again.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Animation holds 'paused' state.\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/setting-playback-rate.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Zero current time is not affected by playbackRate set while the animation is in idle state.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Zero current time is not affected by playbackRate set while the animation is in play-pending state.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Initial current time is scaled by playbackRate set while scroll-linked animation is in running state.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "The current time is not affected by playbackRate set while the scroll-linked animation is in play state.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "The playback rate set before scroll-linked animation started playing affects the rate of progress of the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "The playback rate affects the rate of progress of the current time when scrolling",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Setting the playback rate while play-pending preserves the current time from scrollTimeline.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Setting the playback rate while play-pending preserves the set current time.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Setting the playback rate while playing preserves the current time from scrollTimeline.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Setting the playback rate while playing preserves the set current time.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Negative initial playback rate should correctly modify initial current time.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Zero initial playback rate should correctly modify initial current time.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Setting a zero playback rate while running preserves the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Zero current time is not affected by playbackRate set while the animation is in idle state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Zero current time is not affected by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Zero current time is not affected by playbackRate set while the animation is in idle state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Zero current time is not affected by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Zero current time is not affected by playbackRate set while the animation is in idle state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Zero current time is not affected by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Zero current time is not affected by playbackRate set while the animation is in play-pending state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Zero current time is not affected by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Zero current time is not affected by playbackRate set while the animation is in play-pending state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Zero current time is not affected by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Zero current time is not affected by playbackRate set while the animation is in play-pending state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Zero current time is not affected by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Initial current time is scaled by playbackRate set while scroll-linked animation is in running state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Initial current time is scaled by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Initial current time is scaled by playbackRate set while scroll-linked animation is in running state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Initial current time is scaled by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Initial current time is scaled by playbackRate set while scroll-linked animation is in running state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Initial current time is scaled by playbackRate change.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The current time is not affected by playbackRate set while the scroll-linked animation is in play state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time should stay unaffected by setting playback rate.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "The current time is not affected by playbackRate set while the scroll-linked animation is in play state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time should stay unaffected by setting playback rate.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "The current time is not affected by playbackRate set while the scroll-linked animation is in play state.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"The current time should stay unaffected by setting playback rate.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The playback rate set before scroll-linked animation started playing affects the rate of progress of the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time should increase two times faster than timeline time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "The playback rate set before scroll-linked animation started playing affects the rate of progress of the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time should increase two times faster than timeline time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "The playback rate set before scroll-linked animation started playing affects the rate of progress of the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "40",
                      "40",
                      "0.125",
                      "\"values do not match for \\\"The current time should increase two times faster than timeline time.\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "The playback rate affects the rate of progress of the current time when scrolling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time should increase two times faster than timeline time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "The playback rate affects the rate of progress of the current time when scrolling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time should increase two times faster than timeline time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "The playback rate affects the rate of progress of the current time when scrolling",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"The current time should increase two times faster than timeline time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the playback rate while play-pending preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while playing preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the playback rate while playing preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while playing preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the playback rate while playing preserves the current time from scrollTimeline.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the playback rate while playing preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the playback rate while playing preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the playback rate while playing preserves the set current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "25",
                      "25",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Negative initial playback rate should correctly modify initial current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Negative initial playback rate should correctly modify initial current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Negative initial playback rate should correctly modify initial current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "70",
                      "70",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Reversing the playback rate while playing correctly impacts current time during future scrolls",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "80",
                      "80",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Zero initial playback rate should correctly modify initial current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Zero initial playback rate should correctly modify initial current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Zero initial playback rate should correctly modify initial current time.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a zero playback rate while running preserves the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/setting-start-time.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Setting the start time to an absolute time value throws exception",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time clears the hold time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time clears the hold time when the timeline is inactive",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Setting an unresolved start time sets the hold time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time resolves a pending ready promise",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time updates the finished state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time on a running animation updates the play state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time on a reverse running animation updates the play state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time resolves a pending pause task",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Setting the start time of a playing animation applies a pending playback rate",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Setting the start time to an absolute time value throws exception",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"NotSupportedError\"",
                      "function \"() => {     animation.startTime = CSSNumericValue.parse(\"300\");   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Setting the start time to an absolute time value throws exception",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"NotSupportedError\"",
                      "function \"() => {     animation.startTime = CSSNumericValue.parse(\"300ms\");   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_throws_dom",
                    "test": {
                      "name": "Setting the start time to an absolute time value throws exception",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"NotSupportedError\"",
                      "function \"() => {     animation.startTime = CSSNumericValue.parse(\"0.3s\");   }\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time stays unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is calculated from the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is calculated from the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "30",
                      "30",
                      "0.125",
                      "\"values do not match for \\\"The current time is calculated from the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is calculated from the start time, not the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is calculated from the start time, not the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"The current time is calculated from the start time, not the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Animation reports it is running after setting a resolved start time\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time stays unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The current time is calculated from the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The current time is calculated from the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "30",
                      "30",
                      "0.125",
                      "\"values do not match for \\\"The current time is calculated from the hold time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The current time is calculated from the start time, not the hold time\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time clears the hold time when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Animation reports it is running after setting a resolved start time\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "5",
                      "5",
                      "0.125",
                      "\"values do not match for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Current time is resolved for a running animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Current time is resolved for a running animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "15",
                      "15",
                      "0.125",
                      "\"values do not match for \\\"Current time is resolved for a running animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time is set to the requested value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set after start time is made unresolved\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set after start time is made unresolved\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "15",
                      "15",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set after start time is made unresolved\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Animation reports it is paused after setting an unresolved start time\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "5",
                      "5",
                      "0.125",
                      "\"values do not match for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Current time is unresolved for a running animation when the timeline is inactive\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The start time is set to the requested value\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Hold time is set to unresolved after start time is made unresolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time sets the hold time to unresolved when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"idle\"",
                      "\"idle\"",
                      "\"Animation reports it is idle after setting an unresolved start time\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is in play-pending state\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"Ready promise callback is not called synchronously\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Ready promise callback called after setting startTime\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is in play-pending state\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"Ready promise callback is not called synchronously\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending ready promise when the timelineis inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Ready promise callback called after setting startTime\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Animation is play-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"Animation is no longer pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it paused",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\"",
                      "\"Animation is paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"Sanity check the timeline is inactive\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Animation is play-pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Start time is zero\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"Animation is no longer pending\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting an unresolved start time on a play-pending animation makes it idle when the timeline is inactive",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"idle\"",
                      "\"idle\"",
                      "\"Animation is idle\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "-110",
                      "-110",
                      "0.125",
                      "\"values do not match for \\\"The start time is set to the requested value\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"Seeked to finished state using the startTime\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_greater_than",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "110",
                      "100",
                      "\"Setting the start time updated the finished state with the 'did seek' flag set to true\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Current time does not change after seeking past the effect end time by setting the current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Current time does not change after seeking past the effect end time by setting the current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'expected' unit type must be 'percent' for \\\"Current time does not change after seeking past the effect end time by setting the current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time updates the finished state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "110",
                      "110",
                      "0.125",
                      "\"values do not match for \\\"Current time does not change after seeking past the effect end time by setting the current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time on a running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time on a running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time on a running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time on a running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time on a running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "110",
                      "110",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time on a reverse running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"Animation is finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time on a reverse running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\"",
                      "\"Animation is running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time on a reverse running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"finished\"",
                      "\"finished\"",
                      "\"Animation is finished\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time on a reverse running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time on a reverse running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time on a reverse running animation updates the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "-200",
                      "-200",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending pause task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Animation is in pause-pending state\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting the start time resolves a pending pause task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "false",
                      "\"Ready promise callback is not called synchronously\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time resolves a pending pause task",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"Ready promise callback called after setting startTime\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "-2500",
                      "-2500",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time of a play-pending animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "5000",
                      "5000",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "-25",
                      "-25",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting the start time of a playing animation applies a pending playback rate",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/setting-timeline.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Transitioning from a scroll timeline to a document timeline on a running animation preserves currentTime",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Transitioning from a scroll timeline to a document timeline on a pause-pending animation preserves currentTime",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Transitioning from a scroll timeline to a null timeline on a running animation preserves the play state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "promise_test: Unhandled rejection with value: object \"TypeError: Unsupported timeline: null\"",
                    "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Switching from a null timeline to a scroll timeline on an animation with a resolved start time preserved the play state",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Switching from one scroll timeline to another updates currentTime",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Switching from a document timeline to a scroll timeline updates currentTime when unpaused via CSS.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "promise_test: Unhandled rejection with value: object \"TypeError: Failed to set the 'timeline' property on 'Animation': Failed to convert value to 'AnimationTimeline'.\"",
                    "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Switching from a document timeline to a scroll timeline on an infinite duration animation.",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "promise_test: Unhandled rejection with value: object \"TypeError: Failed to execute 'percent' on 'CSS': The provided double value is non-finite.\"",
                    "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                    "index": 16,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 1,
                  "message": "Uncaught TypeError: Cannot read properties of null (reading 'currentTime')",
                  "stack": "TypeError: Cannot read properties of null (reading 'currentTime')\n    at http://web-platform.test:8000/scroll-animations/scroll-timelines/setting-timeline.tentative.html:3:10151",
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a play-pending animation synchronizes currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a pause-pending animation fixes the currentTime of the animation based on the scroll position once resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed play-pending animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "90",
                      "90",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a running animation synchronizes the currentTime of the animation with the scroll position.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime is fixed while paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Setting a scroll timeline on a reversed paused animation fixes the currentTime of the animation based on the scroll position when resumed",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "90",
                      "90",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Transitioning from a scroll timeline to a document timeline on a running animation preserves currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Transitioning from a scroll timeline to a document timeline on a running animation preserves currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.001",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Transitioning from a scroll timeline to a document timeline on a pause-pending animation preserves currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Transitioning from a scroll timeline to a document timeline on a pause-pending animation preserves currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.001",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"Timeline's currentTime aligns with the scroll position even when paused\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "90",
                      "90",
                      "0.125",
                      "\"values do not match for \\\"Animation's currentTime aligns with the scroll position\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Transition from a scroll timeline to a document timeline on a reversed paused animation maintains correct currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "900",
                      "900",
                      "0.001",
                      "undefined"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Transitioning from a scroll timeline to a null timeline on a running animation preserves the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "promise_test: Unhandled rejection with value: object \"TypeError: Unsupported timeline: null\"",
                      "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Transitioning from a scroll timeline to a null timeline on a running animation preserves the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "promise_test: Unhandled rejection with value: object \"TypeError: Unsupported timeline: null\"",
                      "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a null timeline to a scroll timeline on an animation with a resolved start time preserved the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a null timeline to a scroll timeline on an animation with a resolved start time preserved the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a null timeline to a scroll timeline on an animation with a resolved start time preserved the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a null timeline to a scroll timeline on an animation with a resolved start time preserved the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a null timeline to a scroll timeline on an animation with a resolved start time preserved the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Switching from a null timeline to a scroll timeline on an animation with a resolved start time preserved the play state",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "10",
                      "10",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Switching from one scroll timeline to another updates currentTime",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "20",
                      "20",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline updates currentTime when unpaused via CSS.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "promise_test: Unhandled rejection with value: object \"TypeError: Failed to set the 'timeline' property on 'Animation': Failed to convert value to 'AnimationTimeline'.\"",
                      "stack": "Error\n    at get_stack (http://web-platform.test:8000/resources/testharness.js:4513:21)\n    at new AssertionError (http://web-platform.test:8000/resources/testharness.js:4506:22)\n    at assert (http://web-platform.test:8000/resources/testharness.js:4490:19)\n    at Test.<anonymous> (http://web-platform.test:8000/resources/testharness.js:759:29)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:2637:35",
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating currentTime preserves the new value when unpaused.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"source is resolved\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"paused\"",
                      "\"paused\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"running\"",
                      "\"running\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Switching from a document timeline to a scroll timeline and updating startTime preserves the new value when play is called.",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 15,
                      "phase": 4
                    },
                    "args": [
                      "-10",
                      "-10",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/source-quirks-mode.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Style of <body> is reflected in source attribute in quirks mode",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Style of <body> is reflected in source attribute in quirks mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"body1\"",
                      "\"body1\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Style of <body> is reflected in source attribute in quirks mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "Element node <body id=\"body1\"> <script> test(() => {   try {     asser...",
                      "Element node <body id=\"body1\"> <script> test(() => {   try {     asser..."
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Style of <body> is reflected in source attribute in quirks mode",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null"
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/update-playback-rate.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Updating the playback rate maintains the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Updating the playback rate while running makes the animation pending",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Updating the playback rate on a play-pending animation maintains the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Updating the playback rate on a pause-pending animation maintains the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "If a pending playback rate is set multiple times, the latest wins",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "In the idle state, the playback rate is applied immediately",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "In the paused state, the playback rate is applied immediately",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Updating the playback rate on a finished animation maintains the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Reducing the playback rate should not change the current time of a playing animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Reducing the playback rate should not change the current time of a playing animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Reducing the playback rate should not change the current time of a playing animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Increasing the playback rate should not change the current time of a playing animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Increasing the playback rate should not change the current time of a playing animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Increasing the playback rate should not change the current time of a playing animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Updating the playback rate while running makes the animation pending",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate while running makes the animation pending",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate on a play-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate on a play-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate on a play-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate on a play-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate on a play-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Reducing the playback rate should not change the current time of a play-pending animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate on a play-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Reducing the playback rate should not change the current time of a play-pending animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate on a play-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Reducing the playback rate should not change the current time of a play-pending animation\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate on a pause-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate on a pause-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate on a pause-pending animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "If a pending playback rate is set multiple times, the latest wins",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "1",
                      "1"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "If a pending playback rate is set multiple times, the latest wins",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "4",
                      "4"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "In the idle state, the playback rate is applied immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "In the idle state, the playback rate is applied immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "In the paused state, the playback rate is applied immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "In the paused state, the playback rate is applied immediately",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "2",
                      "2"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Updating the playback rate on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_false",
                    "test": {
                      "name": "Updating the playback rate to zero on a finished animation maintains the current time",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "false"
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/scroll-timelines/updating-the-finished-state.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Updating the finished state when seeking past end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when playing exactly to end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when seeking exactly to end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when playing in reverse past zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when seeking a reversed animation past zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 5,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when playing  a reversed animation exactly to zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 6,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when seeking a reversed animation exactly to zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 7,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when seeking before end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 8,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when seeking a reversed animation before end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 9,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when playback rate is zero and the current time is less than zero",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 10,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when playback rate is zero and the current time is less than end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 11,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when playback rate is zero and the currenttime is greater than end",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 12,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when current time is unresolved",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 13,
                    "phase": 4
                  },
                  {
                    "name": "Updating the finished state when start time is unresolved and did seek = true",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 14,
                    "phase": 4
                  },
                  {
                    "name": "Finish notification steps don't run when the animation seeks to finish and then seeks back again",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 15,
                    "phase": 4
                  },
                  {
                    "name": "Finish notification steps run when the animation completes normally",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 16,
                    "phase": 4
                  },
                  {
                    "name": "Finish notification steps run when an animation without a target effect completes normally",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 17,
                    "phase": 4
                  },
                  {
                    "name": "Finish notification steps run when the animation seeks past finish",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 18,
                    "phase": 4
                  },
                  {
                    "name": "Finish notification steps run when the animation completes with .finish(), even if we then seek away",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 19,
                    "phase": 4
                  },
                  {
                    "name": "Animation finished promise is replaced after seeking back to start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 20,
                    "phase": 4
                  },
                  {
                    "name": "Animation finished promise is replaced after replaying from start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 21,
                    "phase": 4
                  },
                  {
                    "name": "Animation finish event is fired again after seeking back to start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 22,
                    "phase": 4
                  },
                  {
                    "name": "Animation finish event is fired again after replaying from start",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 23,
                    "phase": 4
                  },
                  {
                    "name": "finish event is not fired at the end of the active interval when the endDelay has not expired",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 24,
                    "phase": 4
                  },
                  {
                    "name": "finish event is fired after the endDelay has expired",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 0,
                    "message": null,
                    "stack": null,
                    "index": 25,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "finish event is fired after the endDelay has expired",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "finish event is fired after the endDelay has expired",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "finish event is fired after the endDelay has expired",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 25,
                      "phase": 4
                    },
                    "args": [
                      "200",
                      "200",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when playing exactly to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set to target end clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when playing exactly to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set to target end clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when playing exactly to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set to target end clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking exactly to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking exactly to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking exactly to end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "100",
                      "100",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when playing in reverse past zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set to zero clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when playing in reverse past zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set to zero clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when playing in reverse past zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 4,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set to zero clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation past zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation past zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation past zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 5,
                      "phase": 4
                    },
                    "args": [
                      "-100",
                      "-100",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when playing  a reversed animation exactly to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set to target end clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when playing  a reversed animation exactly to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set to target end clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when playing  a reversed animation exactly to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 6,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set to target end clamping current time\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation exactly to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation exactly to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation exactly to zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 7,
                      "phase": 4
                    },
                    "args": [
                      "0",
                      "0",
                      "0.125",
                      "\"values do not match for \\\"Hold time is set so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "-100",
                      "-100",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Start time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Start time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Start time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "-50",
                      "-50",
                      "0.125",
                      "\"values do not match for \\\"undefined\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is not set so current time should increase\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is not set so current time should increase\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 8,
                      "phase": 4
                    },
                    "args": [
                      "70",
                      "70",
                      "0.125",
                      "\"values do not match for \\\"Hold time is not set so current time should increase\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Start time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Start time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Start time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Current time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Current time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Current time is updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time is not set so current time should decrease\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time is not set so current time should decrease\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when seeking a reversed animation before end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 9,
                      "phase": 4
                    },
                    "args": [
                      "30",
                      "30",
                      "0.125",
                      "\"values do not match for \\\"Hold time is not set so current time should decrease\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the current time is less than zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the current time is less than zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the current time is less than zero",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 10,
                      "phase": 4
                    },
                    "args": [
                      "-100",
                      "-100",
                      "0.125",
                      "\"values do not match for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the current time is less than end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the current time is less than end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the current time is less than end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 11,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the currenttime is greater than end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the currenttime is greater than end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when playback rate is zero and the currenttime is greater than end",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 12,
                      "phase": 4
                    },
                    "args": [
                      "200",
                      "200",
                      "0.125",
                      "\"values do not match for \\\"Hold time should not be cleared so current time should NOT change\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when current time is unresolved",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The animation hold time / start time should not be updated\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when current time is unresolved",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 13,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The animation hold time / start time should not be updated\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when start time is unresolved and did seek = true",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "\"percent\"",
                      "\"percent\"",
                      "\"'actual' unit type must be 'percent' for \\\"The animation hold time should not be updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Updating the finished state when start time is unresolved and did seek = true",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"'actual' must be of type CSSNumberish for \\\"The animation hold time should not be updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_approx_equals",
                    "test": {
                      "name": "Updating the finished state when start time is unresolved and did seek = true",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "50",
                      "50",
                      "0.125",
                      "\"values do not match for \\\"The animation hold time should not be updated\\\"\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Updating the finished state when start time is unresolved and did seek = true",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 14,
                      "phase": 4
                    },
                    "args": [
                      "null",
                      "null",
                      "\"The animation start time should not be updated\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Animation finished promise is replaced after seeking back to start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 20,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_not_equals",
                    "test": {
                      "name": "Animation finished promise is replaced after replaying from start",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 0,
                      "message": null,
                      "stack": null,
                      "index": 21,
                      "phase": 4
                    },
                    "args": [
                      "object \"[object Promise]\"",
                      "object \"[object Promise]\""
                    ],
                    "status": 0
                  }
                ]
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/view-timelines/block-view-timeline-current-time-vertical-rl.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "View timeline with container having vertical-rl layout",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 2,
                    "message": "Test timed out",
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 2,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": []
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/view-timelines/block-view-timeline-current-time.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "View timeline with start and end scroll offsets that do not align with the scroll boundaries",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 2,
                    "message": "Test timed out",
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "View timeline clamps starting scroll offset at 0px",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 3,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "View timeline clamps end scroll offset at max scroll",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 3,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 2,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": []
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/view-timelines/block-view-timeline-nested-subject.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "View timeline with subject that is not a direct descendant of the scroll container",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 2,
                    "message": "Test timed out",
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 2,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": []
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/view-timelines/inline-view-timeline-current-time.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "View timeline with start and end scroll offsets that do not align with the scroll boundaries",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 2,
                    "message": "Test timed out",
                    "stack": null,
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "View timeline clamps starting scroll offset at 0px",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 3,
                    "message": null,
                    "stack": null,
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "View timeline clamps end scroll offset at max scroll",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 3,
                    "message": null,
                    "stack": null,
                    "index": 3,
                    "phase": 4
                  },
                  {
                    "name": "View timeline with container having RTL layout",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 3,
                    "message": null,
                    "stack": null,
                    "index": 4,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 2,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": []
              }
            ],
            [
              "http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html",
              {
                "type": "complete",
                "tests": [
                  {
                    "name": "Default source for a View timeline is the nearest scroll ancestor to the subject",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"outer\" but got \"inner\"",
                    "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:74:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 1,
                    "phase": 4
                  },
                  {
                    "name": "View timeline ignores explicitly set source",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected \"inner\" but got \"outer\"",
                    "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:86:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                    "index": 2,
                    "phase": 4
                  },
                  {
                    "name": "View timeline source is null when display:none",
                    "properties": {},
                    "phases": {
                      "INITIAL": 0,
                      "STARTED": 1,
                      "HAS_RESULT": 2,
                      "CLEANING": 3,
                      "COMPLETE": 4
                    },
                    "PASS": 0,
                    "FAIL": 1,
                    "TIMEOUT": 2,
                    "NOTRUN": 3,
                    "PRECONDITION_FAILED": 4,
                    "status": 1,
                    "message": "assert_equals: expected null but got Element node <div id=\"inner\" class=\"scroller\">\n      <div id=\"target\" ...",
                    "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:97:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                    "index": 3,
                    "phase": 4
                  }
                ],
                "status": {
                  "status": 0,
                  "message": null,
                  "stack": null,
                  "OK": 0,
                  "ERROR": 1,
                  "TIMEOUT": 2,
                  "PRECONDITION_FAILED": 3
                },
                "asserts": [
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Default source for a View timeline is the nearest scroll ancestor to the subject",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"outer\" but got \"inner\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:74:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "Element node <div id=\"target\"></div>",
                      "Element node <div id=\"target\"></div>"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Default source for a View timeline is the nearest scroll ancestor to the subject",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"outer\" but got \"inner\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:74:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"No source\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Default source for a View timeline is the nearest scroll ancestor to the subject",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"outer\" but got \"inner\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:74:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"inner\"",
                      "\"inner\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "Default source for a View timeline is the nearest scroll ancestor to the subject",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"outer\" but got \"inner\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:74:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"No source\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "Default source for a View timeline is the nearest scroll ancestor to the subject",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"outer\" but got \"inner\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:74:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 1,
                      "phase": 4
                    },
                    "args": [
                      "\"inner\"",
                      "\"outer\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "View timeline ignores explicitly set source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"inner\" but got \"outer\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:86:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "Element node <div id=\"target\"></div>",
                      "Element node <div id=\"target\"></div>"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "View timeline ignores explicitly set source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"inner\" but got \"outer\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:86:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"No source\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "View timeline ignores explicitly set source",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected \"inner\" but got \"outer\"",
                      "stack": "    at assert_source_id (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:64:3)\n    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:86:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)",
                      "index": 2,
                      "phase": 4
                    },
                    "args": [
                      "\"outer\"",
                      "\"inner\""
                    ],
                    "status": 1
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "View timeline source is null when display:none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected null but got Element node <div id=\"inner\" class=\"scroller\">\n      <div id=\"target\" ...",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:97:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "Element node <div id=\"target\"></div>",
                      "Element node <div id=\"target\"></div>"
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_true",
                    "test": {
                      "name": "View timeline source is null when display:none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected null but got Element node <div id=\"inner\" class=\"scroller\">\n      <div id=\"target\" ...",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:97:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "true",
                      "\"No source\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "View timeline source is null when display:none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected null but got Element node <div id=\"inner\" class=\"scroller\">\n      <div id=\"target\" ...",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:97:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "\"inner\"",
                      "\"inner\""
                    ],
                    "status": 0
                  },
                  {
                    "assert_name": "assert_equals",
                    "test": {
                      "name": "View timeline source is null when display:none",
                      "properties": {},
                      "phases": {
                        "INITIAL": 0,
                        "STARTED": 1,
                        "HAS_RESULT": 2,
                        "CLEANING": 3,
                        "COMPLETE": 4
                      },
                      "PASS": 0,
                      "FAIL": 1,
                      "TIMEOUT": 2,
                      "NOTRUN": 3,
                      "PRECONDITION_FAILED": 4,
                      "status": 1,
                      "message": "assert_equals: expected null but got Element node <div id=\"inner\" class=\"scroller\">\n      <div id=\"target\" ...",
                      "stack": "    at Test.<anonymous> (http://web-platform.test:8000/scroll-animations/view-timelines/view-timeline-source.tentative.html:97:3)\n    at Test.step (http://web-platform.test:8000/resources/testharness.js:2590:25)\n    at http://web-platform.test:8000/resources/testharness.js:733:36\n    at new Promise (<anonymous>)\n    at http://web-platform.test:8000/resources/testharness.js:732:20",
                      "index": 3,
                      "phase": 4
                    },
                    "args": [
                      "Element node <div id=\"inner\" class=\"scroller\">       <div id=\"target\" ...",
                      "null"
                    ],
                    "status": 1
                  }
                ]
              }
            ]
          ]
        }
      }
    ]
  }
]