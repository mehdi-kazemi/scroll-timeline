name: Build & Test

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      WPT_MANIFEST: ${{ github.workspace }}/wpt/MANIFEST.json
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - uses: actions/checkout@v3
        with:
          repository: devknoll/wpt
          path: wpt
          ref: x-polyfill-all-tests

      - name: Build
        run: |
          npm install
          npm run build:wpt

      - name: Setup WPT
        run: |
          cd wpt
          pip install virtualenv
          ./wpt make-hosts-file | sudo tee -a /etc/hosts
      - name: Run Tests
        run: |
          npm run serve &
          ./wpt/wpt manifest
          ./wpt/wpt serve --inject-script=${{ github.workspace }}/dist/scroll-timeline.js &
          npm test

      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          # Stage the file, commit and push
          pwd
          echo "git status"
          git status
          echo "git stash"
          git stash
          echo "git fetch"
          git fetch
          echo "git config pull.rebase true"
          git config pull.rebase true
          echo "git checkout master"
          git checkout master
          echo "git pull origin master"
          git pull origin master
          echo "git switch -c test-results"
          git switch -c test-results
          # echo "git pull origin test-results"
          # git pull origin test-results
          echo "git rebase master"
          git rebase master
          echo "git stash apply"
          git stash apply
          git add test-results
          git add test-results.html
          git commit -m "Add new results to test-results folder!"
          git push origin test-results
